{"version":3,"sources":["config/fbConfig.js","reducers/authReducer.js","reducers/projectReducer.js","reducers/testReducers.js","actions/testHelpers.js","actions/generalHelpers.js","reducers/generalReducers.js","reducers/rootReducer.js","components/Home/index.js","components/auth/SignIn/index.js","actions/authActions.js","components/auth/SignUp/index.js","components/Test/index.js","components/Charts/index.js","components/Summary/index.js","actions/projectActions.js","components/Sample/index.js","components/Train/index.js","components/Sample/Shulte/Information/index.js","components/Sample/Timer/index.js","components/Button/index.js","components/Sample/Shulte/index.js","components/Sample/ShulteRed/index.js","components/Sample/Perception/index.js","components/Sample/Count/Numbers/index.js","components/Sample/TimerReverse/index.js","components/Sample/Count/Rows/index.js","components/Sample/Count/index.js","components/Sample/MemoryWords/index.js","components/Navbar/SignedInLinks.js","components/Navbar/SignedOutLinks.js","components/Navbar/index.js","components/SummaryBlock/index.js","components/CurrentSummary/index.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","initState","authError","authReducer","state","arguments","length","undefined","action","type","console","log","Object","objectSpread","err","message","projectReducer","combineReducers","setTime","payload","currentTime","submitResult","result","persistCombineReducers","key","storage","storageSession","perceptionResult","time","errors","shulteResult","shulteRedResult","countResult","memoryWordsResult","memoryImagesResult","generalResult","defineProperty","name","finalScore","rootReducer","auth","project","firestoreReducer","firebaseReducer","current","testReducers","generalReducers","Home","props","react_default","a","createElement","className","Link","to","useStyles","makeStyles","theme","container","width","padding","margin","boxShadow","form","flexDirection","display","formItem","marginBottom","connect","dispatch","signIn","creds","credentials","getState","_ref","getFirebase","signInWithEmailAndPassword","email","password","then","catch","_useState","useState","_useState2","slicedToArray","formValues","setFormValues","handleChange","e","target","id","value","classes","uid","Redirect","Card","onSubmit","preventDefault","Typography","variant","TextField","placeholder","label","required","onChange","Grid","Button_Button","color","style","marginRight","backgroundColor","radio","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","firstName","lastName","initials","group","RadioGroup","isExperimentalGroup","defaultValue","FormControlLabel","control","Radio","compose","Charts","date","results","_ref$name","data","labels","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","react_chartjs_2_es","getProjects","createSelector","get","projects","orderBy","firestoreConnect","filteredProjects","filter","authorId","dateArray","map","createdAt","toDate","toLocaleDateString","shulte","shulteRed","perception","count","memoryWords","createProject","profile","add","authorFirstName","authorLastName","Date","CreateProject","title","content","_this","setState","handleSubmit","history","push","this","htmlFor","Component","Sample","Information","prevProps","_this$props","end","error","errorMessage","instructionNote","Timer","timer","counter","tick","setInterval","clearInterval","actions","Button","_Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","nameOfClass","inherits","createClass","text","onClick","Shulte","errorCounter","startTraining","endTraining","tableLength","numbers","i","sort","Math","random","userNumbers","cellVerify","cell","slice","getFinalScore","setNext","submitFinal","_this2","Fragment","Shulte_Information","Sample_Timer","components_Button_Button","submitShulte","ShulteRed","countBackwards","redLength","blackLength","red","black","userRed","userBlack","parseInt","submitShulteRed","Perception","letter","searchedLetter","gridLength","letters","newLetters","longLetters","guessedCells","index","includes","abortTest","innerText","getTime","submitPerseption","Numbers","firstNumber","floor","secondNumber","sign","round","checkResult","first","second","abs","setAnswer","elIndex","res","disabled","onBlur","TimerReverse","maxTime","passedFunction","Rows","row","rowAnswer","ans","submitRow","startNextRow","submitLastRow","_this$props2","currentRow","rowLength","lineLength","number","j","Numbers_Numbers","Sample_TimerReverse","numberOfRows","Count","answer","arrayAnswer","toConsumableArray","firstArray","flat","secondArray","firstResult","reduce","b","secondResult","finalResult","item","Rows_Rows","submitCount","words","MemoryWords","showWords","correct","endMemorizing","checkWords","wordsLower","word","toLowerCase","values","join","autoComplete","submitMemoryWords","signOut","_ref2","NavLink","SignedOutLinks","navBar","link","textDecoration","links","Navbar_SignedInLinks","Navbar_SignedOutLinks","AppBar","position","Toolbar","SummaryBlock","_ref$count","_ref$memoryWords","_ref$perception","_ref$shulte","_ref$shulteRed","CurrentSummary","showSummary","showResults","_get","SummaryBlock_SummaryBlock","App","components_Navbar","Switch","Route","exact","path","component","Signin","Signup","Test","Train","Summary","Boolean","window","location","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","HashRouter","basename","src_App","document","getElementById","persistStore","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce9d6f35.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth'\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyCZnBjFCvxM90C-WIcjuVwzUPAgr2782QA\",\r\n    authDomain: \"psy-testing.firebaseapp.com\",\r\n    databaseURL: \"https://psy-testing.firebaseio.com\",\r\n    projectId: \"psy-testing\",\r\n    storageBucket: \"psy-testing.appspot.com\",\r\n    messagingSenderId: \"209166839391\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nfirebase.firestore();\r\n\r\nexport default firebase ","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default authReducer;","export const initState = {}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  console.log(\"State in project reducer\", action, state)\r\n\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT_SUCCESS':\r\n      console.log('create project success');\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error');\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;","import { combineReducers } from \"redux\";\r\nimport { SET_TIME } from '../actions/testHelpers';\r\n\r\nexport const setTime = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case SET_TIME:\r\n            return action.payload.currentTime;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default combineReducers({\r\n    setTime\r\n})\r\n","export const SET_TIME = \"current/SET_TIME\";\r\n\r\nexport const setTime = (currentTime = \"\") => ({\r\n    type: SET_TIME,\r\n    payload: { currentTime }\r\n});","export const SUBMIT_PERCEPTION = \"general/SUBMIT_PERCEPTION\";\r\nexport const SUBMIT_SHULTE = \"general/SUBMIT_SHULTE\";\r\nexport const SUBMIT_SHULTE_RED = \"general/SUBMIT_SHULTE_RED\";\r\nexport const SUBMIT_COUNT = \"general/SUBMIT_COUNT\";\r\nexport const SUBMIT_MEMORY_WORDS = \"general/SUBMIT_MEMORY_WORDS\";\r\nexport const SUBMIT_MEMORY_IMAGES = \"general/SUBMIT_MEMORY_IMAGES\";\r\nexport const SUBMIT_RESULT = \"general/SUBMIT_RESULT\";\r\n\r\nexport const submitPerseption = (result = {}) => ({\r\n  type: SUBMIT_PERCEPTION,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitShulte = (result = {}) => ({\r\n  type: SUBMIT_SHULTE,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitShulteRed = (result = {}) => ({\r\n  type: SUBMIT_SHULTE_RED,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitCount = (result = {}) => ({\r\n  type: SUBMIT_COUNT,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitMemoryWords = (result = {}) => ({\r\n  type: SUBMIT_MEMORY_WORDS,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitMemoryImages = (result = {}) => ({\r\n  type: SUBMIT_MEMORY_IMAGES,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitResult = (result = {}) => ({\r\n  type: SUBMIT_RESULT,\r\n  payload: {result}\r\n})","import {persistCombineReducers} from 'redux-persist';\r\nimport storageSession from 'redux-persist/lib/storage/session';\r\nimport {\r\n  SUBMIT_COUNT, SUBMIT_MEMORY_IMAGES,\r\n  SUBMIT_MEMORY_WORDS,\r\n  SUBMIT_PERCEPTION,\r\n  SUBMIT_SHULTE,\r\n  SUBMIT_SHULTE_RED,\r\n  SUBMIT_RESULT\r\n} from '../actions/generalHelpers';\r\n\r\nexport const perceptionResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_PERCEPTION:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const shulteResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_SHULTE:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const shulteRedResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_SHULTE_RED:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const countResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_COUNT:\r\n      return {\r\n        ...state,\r\n        result: action.payload.result,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const memoryWordsResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_MEMORY_WORDS:\r\n      return {\r\n        ...state,\r\n        result: action.payload.result,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const memoryImagesResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_MEMORY_IMAGES:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const generalResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_RESULT:\r\n      return {\r\n        ...state,\r\n        [action.payload.result.name]: action.payload.result.finalScore,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default persistCombineReducers(\r\n  {\r\n    key: 'psyTesting',\r\n    storage: storageSession,\r\n  },\r\n  {\r\n    perceptionResult,\r\n    shulteResult,\r\n    shulteRedResult,\r\n    countResult,\r\n    memoryWordsResult,\r\n    memoryImagesResult,\r\n    generalResult,\r\n  })\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport testReducers from './testReducers';\r\nimport generalReducers from './generalReducers';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n    current: testReducers,\r\n    result: generalReducers\r\n});\r\n\r\nexport default rootReducer","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './styles.css'\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <div className=\"container home-container\">\r\n            {/*<div className=\"home-item\"><Link to=\"/test\" >Начать тренировку</Link></div>*/}\r\n            {/*<div className=\"home-item\"><Link to=\"/train\" >Train</Link></div>*/}\r\n            <div className=\"home-item\"><Link to='/test/shulte'>Начать</Link></div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Home","import React, { useState } from \"react\";\r\nimport { TextField, makeStyles, Button, Card, Grid, Typography } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signIn } from \"../../../actions/authActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    width: 600,\r\n    padding: 15,\r\n    margin: \"300px auto\",\r\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\"\r\n  },\r\n  form: {\r\n    flexDirection: \"column\",\r\n    display: \"flex\"\r\n  },\r\n  formItem: {\r\n    marginBottom: 15\r\n  }\r\n}));\r\n\r\nconst SignIn = (props) => {\r\n  const [formValues, setFormValues] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.signIn(formValues);\r\n  };\r\n  const classes = useStyles();\r\n  const { authError, auth } = props;\r\n  if (auth.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Card className={classes.container}>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h5\" className=\"grey-text text-darken-3\">Войти</Typography>\r\n        <TextField\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Введите email\"\r\n          label=\"Email адрес\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.email}\r\n          className={classes.formItem}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Введите пароль\"\r\n          label=\"Пароль\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.password}\r\n          className={classes.formItem}\r\n        />\r\n        <Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ marginRight: 20,  backgroundColor: '#d8f0de', color: 'black' }}\r\n          >\r\n            Войти\r\n          </Button>\r\n          {authError && <p>{authError}</p>}\r\n        </Grid>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({type: 'LOGIN_SUCCESS'});\r\n    }).catch((err) => {\r\n      dispatch({type: 'LOGIN_ERROR', err});\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({type: 'SIGNOUT_SUCCESS'})\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then(resp => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0],\r\n        group: newUser.group,\r\n      });\r\n    }).then(() => {\r\n      dispatch({type: 'SIGNUP_SUCCESS'});\r\n    }).catch((err) => {\r\n      dispatch({type: 'SIGNUP_ERROR', err});\r\n    });\r\n  }\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  makeStyles,\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  Typography,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio\r\n} from \"@material-ui/core\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../../actions/authActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    width: 600,\r\n    padding: 15,\r\n    margin: \"200px auto\",\r\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\"\r\n  },\r\n  form: {\r\n    flexDirection: \"column\",\r\n    display: \"flex\"\r\n  },\r\n  formItem: {\r\n    marginBottom: 15\r\n  },\r\n  radio: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n  }\r\n}));\r\n\r\nconst Signup = props => {\r\n  const [formValues, setFormValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    group: \"experimental\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const setGroup = e => {\r\n    setFormValues({\r\n      ...formValues,\r\n      group: e.target.value\r\n    });\r\n    console.log(formValues)\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.signUp(formValues);\r\n  };\r\n  const classes = useStyles();\r\n  const { authError, auth } = props;\r\n  if (auth.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Card className={classes.container}>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h5\" className=\"grey-text text-darken-3\">\r\n          Зарегистрироваться\r\n        </Typography>\r\n        <TextField\r\n          id=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Введите email\"\r\n          label=\"Email адрес\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.email}\r\n          className={classes.formItem}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Введите пароль\"\r\n          label=\"Пароль\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.password}\r\n          className={classes.formItem}\r\n        />\r\n        <TextField\r\n          id=\"firstName\"\r\n          type=\"text\"\r\n          placeholder=\"Введите имя\"\r\n          label=\"Имя\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.firstName}\r\n          className={classes.formItem}\r\n        />\r\n        <TextField\r\n          id=\"lastName\"\r\n          type=\"text\"\r\n          placeholder=\"Введите фамилию\"\r\n          label=\"Фамилия\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.lastName}\r\n          className={classes.formItem}\r\n        />\r\n        <Typography variant=\"h6\">Группа</Typography>\r\n        <RadioGroup\r\n          name=\"group\"\r\n          value={formValues.isExperimentalGroup}\r\n          onChange={setGroup}\r\n          className={classes.radio}\r\n          defaultValue={formValues.group}\r\n        >\r\n          <FormControlLabel\r\n            id=\"isExperimentalGroup\"\r\n            value=\"experimental\"\r\n            control={<Radio />}\r\n            label=\"Экспериментальная\"\r\n          />\r\n          <FormControlLabel\r\n            id=\"isExperimentalGroup\"\r\n            value=\"control\"\r\n            control={<Radio />}\r\n            label=\"Контрольная\"\r\n          />\r\n        </RadioGroup>\r\n        <Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ marginRight: 20,  backgroundColor: '#d8f0de', color: 'black' }}\r\n          >\r\n            Зарегистрироваться\r\n          </Button>\r\n          {authError && <p>{authError}</p>}\r\n        </Grid>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: creds => dispatch(signUp(creds))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Signup);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\n//import { firestoreConnect } from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport './styles.css'\r\n\r\nconst Test = (props) => {\r\n  const {auth} = props;\r\n  if (!auth.uid) return <Redirect to='/signin'/>;\r\n  return (\r\n    <div className=\"container\">\r\n      {/* <Link to='/test/sample'>Sample</Link>  */}\r\n      <div className=\"test-home\">\r\n        <Link to='/test/shulte'>Начать тест Шульте</Link>\r\n        <br/>\r\n        <Link to='/test/shulte-red'>Начать тест Шульте в модификации Горбова</Link>\r\n        <br/>\r\n        <Link to='/test/perception'>Начать методику корректурные пробы</Link>\r\n        <br/>\r\n        <Link to='/test/count'>Начать методику счет по Крепелину</Link>\r\n        <br/>\r\n        <Link to='/test/memory-words'>Начать методику \"Запоминание слов\"</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps)\r\n)(Test)","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nexport function Charts ({date, results, name = ''})  {\r\n  const data = {\r\n    labels: date,\r\n    datasets: [\r\n      {\r\n        label: name,\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: 'rgba(75,192,192,0.4)',\r\n        borderColor: 'rgba(75,192,192,1)',\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        pointBorderColor: 'rgba(75,192,192,1)',\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: results\r\n      }\r\n    ]\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>{name}</h2>\r\n      <Line data={data} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport get from 'lodash-es/get';\r\nimport orderBy from 'lodash-es/orderBy';\r\nimport {Charts} from \"../Charts\";\r\n\r\nconst getAllProjects = (state) => get(state, 'firestore.ordered.projects', []);\r\nconst getProjects = createSelector(\r\n  getAllProjects,\r\n  (projects) => orderBy(projects, ['createdAt'],['asc'])\r\n);\r\n\r\nconst Summary = ({ projects, auth }) => {\r\n  const filteredProjects = projects.filter(project => project.authorId === auth.uid);\r\n  const dateArray = filteredProjects.map(project => project.createdAt ? project.createdAt.toDate().toLocaleDateString() : 0);\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary summary-container\">\r\n      <Charts date={dateArray}\r\n              results={filteredProjects.map(project => project.generalResult ? project.generalResult.shulte || 0 : 0)}\r\n              name='Таблицы Шульте'\r\n      />\r\n      <Charts date={dateArray}\r\n              results={filteredProjects.map(project => project.generalResult ? project.generalResult.shulteRed || 0 : 0)}\r\n              name='Черно-Красные Таблицы Шульте'\r\n      />\r\n      <Charts date={dateArray}\r\n              results={filteredProjects.map(project => project.generalResult ? project.generalResult.perception || 0 : 0)}\r\n              name='Корректурные пробы'\r\n      />\r\n      <Charts date={dateArray}\r\n              results={filteredProjects.map(project => project.generalResult ? project.generalResult.count || 0 : 0)}\r\n              name='Счет'\r\n      />\r\n      <Charts date={dateArray}\r\n              results={filteredProjects.map(project => project.generalResult ? project.generalResult.memoryWords || 0 : 0)}\r\n              name='Запоминание слов'\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: getProjects(state),\r\n    auth: state.firebase.auth\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' }\r\n  ])\r\n)(Summary)","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n    }).catch(err => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n//import { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Sample from '../Sample';\r\n\r\nconst Train = (props) => {\r\n  const { auth } = props;\r\n  if (!auth.uid) return <Redirect to='/signin' />\r\n  return (\r\n    <div>\r\n      Train\r\n      <Sample history={props.history} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps)\r\n)(Train)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Information extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    return prevProps.time !== this.props.time || prevProps.errors !== this.props.errors;\r\n  }\r\n  render() {\r\n    const {end, errors, error, errorMessage, instructionNote, time} = this.props;\r\n    return (\r\n      <div className='info'>\r\n        {\r\n          end ? <p>Тестирование завершено! Ваше время: {time} сек. Количество ошибок: {errors}.</p> :\r\n            error ? <p className='info__error'>{errorMessage}</p> :\r\n              <p>{instructionNote}</p>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    time: state.current.setTime\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Information)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {setTime} from '../../../actions/testHelpers';\r\n\r\nclass Timer extends Component {\r\n  state = {\r\n    timer: null,\r\n    counter: 0\r\n  };\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      counter: this.state.counter + 1\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let timer = setInterval(this.tick, 1000);\r\n    this.setState({ timer });\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.setTime(this.state.counter);\r\n    clearInterval(this.state.timer);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='timer'>\r\n        {this.state.counter} сек.\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setTime\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  actions\r\n)(Timer);","import React, {Component} from 'react';\r\nimport './styles.css'\r\n\r\nexport class Button extends Component {\r\n  nameOfClass = () => {\r\n    switch (this.props.nameOfClass) {\r\n      case 'next':\r\n        return 'button-next';\r\n      default:\r\n        return 'button-main';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {text, onClick} = this.props;\r\n    return (\r\n      <button className={this.nameOfClass()} onClick={onClick}>{text}</button>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../../actions/projectActions'\r\nimport {submitShulte, submitResult} from '../../../actions/generalHelpers'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Information from './Information'\r\nimport Timer from '../Timer'\r\nimport {Button} from \"../../Button\";\r\nimport './styles.css';\r\n\r\nclass Shulte extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n  };\r\n\r\n  tableLength = 25; //25\r\n  numbers = Array(this.tableLength).fill().map((e, i) => i + 1).sort(() => Math.random() - 0.5);\r\n  userNumbers = [0];\r\n  cellVerify = (cell) => {\r\n    this.setState({error: false});\r\n    if (this.userNumbers.slice(-1)[0] + 1 === cell) {\r\n      this.userNumbers.push(cell);\r\n      if (this.userNumbers.slice(-1)[0] === this.tableLength) {\r\n        this.setState({endTraining: true})\r\n      }\r\n    } else {\r\n      this.setState({error: true});\r\n      if (this.userNumbers.length <= this.tableLength && cell !== 25) {\r\n        let error = this.state.errorCounter + 1;\r\n        this.setState({errorCounter: error})\r\n      }\r\n    }\r\n  };\r\n\r\n  getFinalScore = () => {\r\n    return this.props.time * 0.1 + this.state.errorCounter;\r\n  };\r\n\r\n  setNext = () => {\r\n    const finalScore = this.getFinalScore();\r\n    this.props.submitResult({time: this.props.time, errors: this.state.errorCounter});\r\n    this.props.submitFinal ({finalScore, name: 'shulte'});\r\n    this.props.history.push('/test/shulte-red');\r\n  };\r\n\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка различных аспектов внимания</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Начните поиск цифр от 1 до 25'}</span>\r\n          <button className='start-btn' onClick={() =>\r\n            this.setState({startTraining: true})}>\r\n            Начать\r\n          </button>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n          <Information\r\n            error={this.state.error}\r\n            end={this.state.endTraining}\r\n            errors={this.state.errorCounter}\r\n            errorMessage={'Неверное число!'}\r\n            instructionNote={'Найдите числа!'}\r\n          />\r\n\r\n          <div className='table'>\r\n            {\r\n              this.numbers.map((e) =>\r\n                <div key={e} onClick={() => this.cellVerify(e)} className='cell'>{e}</div>)\r\n            }\r\n          </div>\r\n          {!this.state.endTraining && <Timer/>}\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining &&\r\n         // <button className='next' onClick={() =>\r\n        //  this.props.submitResult({time: this.props.time, errors: this.state.errorCounter})}>Submit\r\n        //  </button>\r\n         // <button className='next' onClick={() =>\r\n        //  this.props.createProject(this.props.project)\r\n      // }>Submit Final\r\n      //    </button>\r\n\r\n        <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitShulte(result)),\r\n    submitFinal: (result) => dispatch(submitResult(result)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shulte)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../../actions/projectActions'\r\nimport {submitResult, submitShulteRed} from '../../../actions/generalHelpers'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Information from '../Shulte/Information'\r\nimport Timer from '../Timer'\r\nimport './styles.css';\r\nimport {Button} from \"../../Button\";\r\n\r\nclass ShulteRed extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n    countBackwards: false,\r\n  };\r\n\r\n  redLength = 24; //24\r\n  blackLength = 25; //25\r\n  red = Array(this.redLength).fill().map((e, i) => i + 1 + 'r');\r\n  black = Array(this.blackLength).fill().map((e, i) => i + 1 + 'b');\r\n  numbers = this.red.concat(this.black).sort(() => Math.random() - 0.5);\r\n  userRed = [`${this.redLength + 1}r`];\r\n  userBlack = ['0b'];\r\n  cellVerify = (cell) => {\r\n    this.setState({error: false});\r\n    if (this.state.countBackwards) {\r\n      if (parseInt(this.userRed.slice(-1)[0]) - 1 + \"r\" === cell) {\r\n        this.userRed.push(cell);\r\n        this.setState({countBackwards: false});\r\n      } else {\r\n        this.setState({error: true});\r\n        if (this.userRed.length <= this.redLength && cell !== 24) {\r\n          let error = this.state.errorCounter + 1;\r\n          this.setState({errorCounter: error})\r\n        }\r\n      }\r\n    } else if (!this.state.countBackwards) {\r\n      if (parseInt(this.userBlack.slice(-1)[0]) + 1 + \"b\" === cell) {\r\n        this.userBlack.push(cell);\r\n        this.setState({countBackwards: true});\r\n        if (parseInt(this.userBlack.slice(-1)[0]) === this.blackLength) {\r\n          this.setState({endTraining: true})\r\n        }\r\n      } else {\r\n        this.setState({error: true});\r\n        if (this.userBlack.length <= this.blackLength && cell !== 25) {\r\n          let error = this.state.errorCounter + 1;\r\n          this.setState({errorCounter: error})\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  getFinalScore = () => {\r\n    return this.props.time * 0.1 + this.state.errorCounter;\r\n  };\r\n\r\n  setNext = () => {\r\n    const finalScore = this.getFinalScore();\r\n    this.props.submitResult({time: this.props.time, errors: this.state.errorCounter});\r\n    this.props.submitFinal ({finalScore, name: 'shulteRed'});\r\n    this.props.history.push('/test/perception');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка различных аспектов внимания</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Начните поиск цифр: 1 черный - 24 красный; 2 черный - 23 красный... '}</span>\r\n          <button className='start-btn' onClick={() =>\r\n            this.setState({startTraining: true})}>\r\n            Начать\r\n          </button>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n          <Information\r\n            error={this.state.error}\r\n            end={this.state.endTraining}\r\n            errors={this.state.errorCounter}\r\n            errorMessage={'Неверное число!'}\r\n            instructionNote={'Найдите числа: 1 черный - 24 красный; 2 черный - 23 красный...'}\r\n          />\r\n\r\n          <div className='table-wide'>\r\n            {\r\n              this.numbers.map((e) =>\r\n                <div className={e.slice(-1) === 'r' ? 'red cell-wide' : 'cell-wide'}\r\n                     key={e} onClick={() => this.cellVerify(e)}>{parseInt(e)}</div>)\r\n            }\r\n          </div>\r\n          {!this.state.endTraining && <Timer/>}\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining &&\r\n        <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitShulteRed(result)),\r\n    submitFinal: (result) => dispatch(submitResult(result)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShulteRed)","import React, {Component} from 'react';\r\nimport Timer from '../Timer';\r\nimport Information from '../Shulte/Information';\r\nimport {createProject} from \"../../../actions/projectActions\";\r\nimport {submitPerseption, submitResult} from \"../../../actions/generalHelpers\";\r\nimport {connect} from \"react-redux\";\r\nimport './styles.css';\r\nimport {Button} from \"../../Button\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Perception extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false\r\n  };\r\n  letter = 'н';\r\n  searchedLetter = 'п';\r\n  gridLength = 252;  //252\r\n  letters = Array(this.gridLength).fill(this.letter);\r\n  newLetters = Array(4).fill(this.searchedLetter);\r\n  longLetters = this.letters.concat(this.newLetters).sort(() => Math.random() - 0.5);\r\n\r\n  guessedCells = [];\r\n  cellVerify = (cell, index) => {\r\n    this.setState({error: false});\r\n    if (cell === this.searchedLetter && !this.guessedCells.includes(index) && this.guessedCells.length <= this.newLetters.length) {\r\n      this.guessedCells.push(index);\r\n      if (this.newLetters.length === this.guessedCells.length) {\r\n        this.setState({endTraining: true});\r\n      }\r\n    } else {\r\n      this.setState({error: true, errorCounter: this.state.errorCounter + 1});\r\n    }\r\n\r\n  };\r\n  abortTest = () => {\r\n    this.setState({errorCounter: this.state.errorCounter + (this.newLetters.length - this.guessedCells.length)});\r\n    this.setState({endTraining: true});\r\n  };\r\n\r\n  getFinalScore = () => {\r\n    return this.props.time * 0.1 + this.state.errorCounter;\r\n  };\r\n\r\n  setNext = () => {\r\n    const finalScore = this.getFinalScore();\r\n    this.props.submitResult({time: this.props.time, errors: this.state.errorCounter});\r\n    this.props.submitFinal ({finalScore, name: 'perception'});\r\n    this.props.history.push('/test/count');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n        <div className='contents'>\r\n          <p>Корректурная проба</p>\r\n          {!this.state.startTraining &&\r\n          <div className='message'>\r\n            <span className='start-message'>{`Найдите все буквы \"${this.searchedLetter}\"`}</span>\r\n            <button className='start-btn' onClick={() => this.setState({startTraining: true})}>Начать</button>\r\n          </div>\r\n          }\r\n          {this.state.startTraining &&\r\n          <React.Fragment>\r\n            <Information error={this.state.error} end={this.state.endTraining}\r\n                         errors={this.state.errorCounter}\r\n                         errorMessage={'Неверная буква!'}\r\n                         instructionNote={`Найдите все буквы \"${this.searchedLetter}\"`}\r\n            />\r\n            <div className='grid'>\r\n              {\r\n                this.longLetters.map((e, i) =>\r\n                  <div\r\n                    key={i}\r\n                    onClick={(e) => this.cellVerify(e.target.innerText, i)}\r\n                    className='letter'>{e}\r\n                  </div>)\r\n              }\r\n            </div>\r\n            {!this.state.endTraining && <> <Timer getTime={this.props.time}/> <Button text='Завершить тестирование' onClick={this.abortTest} /> </>}\r\n\r\n          </React.Fragment>\r\n          }\r\n          {this.state.endTraining && <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitPerseption(result)),\r\n    submitFinal: (result) => dispatch(submitResult(result)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Perception)","import React, {Component} from \"react\";\r\n\r\nexport class Numbers extends Component {\r\n  state = {\r\n    value: null,\r\n  };\r\n  firstNumber = Math.floor(Math.random() * (10 - 1)) + 1;\r\n  secondNumber = Math.floor(Math.random() * (10 - 1)) + 1;\r\n  sign = Math.round(Math.random());\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value\r\n    })\r\n  };\r\n\r\n  checkResult = () => {\r\n    const first = parseInt(this.firstNumber);\r\n    const second = parseInt(this.secondNumber);\r\n    const result = this.sign  ? first + second : Math.abs(first - second);\r\n    //return parseInt(this.state.value) === result ? console.log(\"yes\") : console.log(\"No\")\r\n    this.props.setAnswer({\r\n      index: this.props.elIndex,\r\n      res: Math.abs(parseInt(this.state.value)) === result ? 1 : 0})\r\n  };\r\n\r\n  render() {\r\n    const {firstNumber, secondNumber, sign} = this;\r\n    const {disabled} = this.props;\r\n\r\n    return (\r\n      <div className='cell-container'>\r\n        <div>{firstNumber}</div>\r\n        <div> {sign ? \"+\" : \"-\"} </div>\r\n        <div>{secondNumber}</div>\r\n        <input onChange={this.handleChange} disabled={disabled} onBlur={this.checkResult}\r\n        style={{width: '36px'}}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n//import {setTime} from '../../../actions/testHelpers';\r\n\r\nclass TimerReverse extends Component {\r\n  state = {\r\n    timer: null,\r\n    counter: this.props.maxTime\r\n  };\r\n\r\n  tick = () => {\r\n    if (this.state.counter > 1) {\r\n      this.setState({\r\n        counter: this.state.counter - 1\r\n      })\r\n    } else  {\r\n      this.setState({\r\n        counter: this.state.counter - 1\r\n      });\r\n      this.props.passedFunction();\r\n      clearInterval(this.state.timer);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let timer = setInterval(this.tick, 1000);\r\n    this.setState({ timer });\r\n  }\r\n  componentWillUnmount() {\r\n    //this.props.setTime(this.state.counter); - не нужно в рамках обратного отчета\r\n    clearInterval(this.state.timer);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='timer'>\r\n        {this.state.counter} сек.\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  //setTime\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(TimerReverse);","import React, {Component} from 'react';\r\nimport {Numbers} from \"../Numbers\";\r\nimport TimerReverse from \"../../TimerReverse\";\r\nimport {lineLength} from '../../Count'\r\nimport {Button} from \"../../../Button\";\r\n\r\nexport class Rows extends Component {\r\n  state = {\r\n    [this.props.row]: [],\r\n  };\r\n\r\n  rowAnswer = (ans) => {\r\n    this.setState(state => ({...state, [this.props.row]: state[this.props.row].concat(ans)}))\r\n  };\r\n\r\n  submitRow = () => {\r\n    const {startNextRow, row} = this.props;\r\n    this.props.setAnswer(this.state[this.props.row]);\r\n    startNextRow(row + 1);\r\n  };\r\n\r\n  submitLastRow = () => {\r\n    this.submitRow();\r\n    this.props.endTraining();\r\n\r\n  };\r\n\r\n  render() {\r\n    const {row, currentRow, time, rowLength } = this.props;\r\n    return (\r\n      <div className='number-container'>\r\n        {\r\n          Array(lineLength).fill().map((number, j) => (\r\n            <Numbers\r\n              row={row}\r\n              key={j}\r\n              elIndex={j}\r\n              disabled={row !== currentRow}\r\n              lineLength={lineLength}\r\n              setAnswer={this.rowAnswer}\r\n            />\r\n          ))\r\n        }\r\n        {rowLength === row ? <Button onClick={this.submitLastRow} text='Завершить строку' nameOfClass='next'/> :\r\n          <Button  nameOfClass='next' onClick={this.submitRow} text='Следующая строка' />}\r\n        <div className='timer-container'>\r\n          {row === currentRow &&\r\n          <TimerReverse maxTime={time} passedFunction={rowLength === row ? this.submitLastRow : this.submitRow}/>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../../actions/projectActions';\r\nimport {submitCount, submitResult} from '../../../actions/generalHelpers';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Information from '../Shulte/Information';\r\nimport {Rows} from './Rows';\r\nimport {Button} from \"../../Button\";\r\nimport './styles.css';\r\n\r\nexport const lineLength = 20; //23;\r\nconst numberOfRows = 8; //10 - always even number\r\n\r\nclass Count extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n    result: {},\r\n    currentRow: 0,\r\n    answer: {},\r\n    arrayAnswer: [],\r\n    finalScore: 0,\r\n  };\r\n\r\n  setAnswer = (ans) => {\r\n    this.setState(({answer: {...this.state.answer, [this.state.currentRow]: ans}}));\r\n    this.setState(({arrayAnswer: [...this.state.arrayAnswer, ans]}))\r\n  };\r\n\r\n  rowLength = Array(numberOfRows).fill('');\r\n\r\n  startNextRow = (i) => {\r\n    this.setState({currentRow: i});\r\n  };\r\n\r\n  endTraining = () => {\r\n    this.setState({endTraining: true});\r\n  };\r\n\r\n\r\n  setNext = () => {\r\n    const firstArray = this.state.arrayAnswer.slice(0, numberOfRows/2).flat();\r\n    const secondArray = this.state.arrayAnswer.slice(numberOfRows/2, numberOfRows).flat();\r\n    console.log(firstArray, secondArray);\r\n    const firstResult = firstArray.reduce((a, b = {}) => { console.log(a, b);   return a + b.res}, 0);\r\n    const secondResult = secondArray.reduce((a, b = {}) => a + b.res, 0);\r\n    // Если значение коэффициента работоспособности приближается к 1,\r\n    // то это означает, что утомления практически не происходит.\r\n    // Если коэффициент больше 1, то это свидетельствует о медленной врабатываемости испытуемого.\r\n    // Коэффициент работоспособности, стремящийся к нулю, связан с истощаемостью внимания и снижением работоспособности.\r\n    const finalResult = firstResult > 0 ? secondResult/firstResult : 0;\r\n    this.props.submitResult(this.state.answer);\r\n    this.props.submitFinal ({finalScore: finalResult, name: 'count'});\r\n    this.props.history.push('/test/memory-words');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка различных аспектов внимания</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Складывайте или вычитайте числа. Запишите модуль числа.'}</span>\r\n          <Button text='Начать' onClick={() =>\r\n            this.setState({startTraining: true})}/>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n          <Information\r\n            error={this.state.error}\r\n            end={this.state.endTraining}\r\n            errors={this.state.errorCounter}\r\n            errorMessage={'Неверное число!'}\r\n            instructionNote={'Складывайте или вычитайче числа. Запишите модуль числа.'}\r\n          />\r\n\r\n          {\r\n            this.rowLength.map((item, i) =>\r\n              <Rows\r\n                rowLength={this.rowLength.length - 1}\r\n                key={i}\r\n                row={i}\r\n                currentRow={this.state.currentRow}\r\n                time={30}\r\n                setAnswer={this.setAnswer}\r\n                startNextRow={this.startNextRow}\r\n                endTraining={this.endTraining}\r\n              />\r\n            )\r\n          }\r\n\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining && <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitCount(result)),\r\n    submitFinal: (result) => dispatch(submitResult(result)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Count)\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../../actions/projectActions'\r\nimport {submitMemoryWords, submitResult} from '../../../actions/generalHelpers'\r\nimport {Redirect} from 'react-router-dom'\r\nimport './styles.css';\r\nimport TimerReverse from \"../TimerReverse\";\r\nimport {Button} from \"../../Button\";\r\n\r\n//(new Set(array)).size !== array.length;  to check for duplicates\r\nconst wordsRaw = ['Лес', 'Хлеб', 'Окно', 'Стул', 'Вода', 'Конь', 'Гриб', 'Игла', 'Мед', 'Огонь',\r\n  'Число', 'Хор', 'Камень', 'Кино', 'Зонт', 'Море', 'Шмель', 'Лампа', 'Рысь',\r\n  'Кот', 'Ель', 'Дом', 'Зима', 'Мост', 'Брат', 'Очки'];\r\n\r\nconst words = wordsRaw.sort(() => Math.random() - 0.5).slice(0, 10);\r\n\r\nclass MemoryWords extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n    showWords: true,\r\n    result: [],\r\n    correct: 0,\r\n  };\r\n\r\n  endMemorizing = () => {\r\n    this.setState({showWords: false})\r\n  };\r\n  checkWords = () => {\r\n    const wordsLower = words.map(word => word.toLowerCase());\r\n    const correct = Object.values(this.state.result).filter(value => wordsLower.includes(value.toLowerCase()));\r\n    this.setState({endTraining: true, correct: correct.length})\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState(({result: {...this.state.result, [e.target.id]: e.target.value}}))\r\n  };\r\n\r\n  setNext = () => {\r\n    this.props.submitResult(this.state.correct);\r\n    this.props.submitFinal({finalScore: this.state.correct, name: 'memoryWords'});\r\n    this.props.history.push('/test/current-summary');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка памяти</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Запомните следующие слова'}</span>\r\n          <button className='start-btn' onClick={() =>\r\n            this.setState({startTraining: true})}>\r\n            Начать\r\n          </button>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n\r\n          {this.state.showWords && <TimerReverse maxTime={30} passedFunction={this.endMemorizing}/>}\r\n\r\n          {this.state.showWords && <div className='words'>{words.join(', ')}</div>}\r\n          {!this.state.showWords && <div>\r\n            {words.map((word, i) => <div key={i} className='input-wrapper'><input placeholder={'Введите слово'}\r\n                                                                                  onChange={this.handleChange}\r\n                                                                                  autoComplete=\"off\"\r\n                                                                                  id={i}/></div>)}\r\n            <Button onClick={this.checkWords} text='Проверить' nameOfClass='next'/>\r\n          </div>}\r\n\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining &&\r\n        //two buttons did better job, one button is next and the final button is submit\r\n        <>\r\n          <div>Воспроизведено слов правильно: {this.state.correct}</div>\r\n          <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>\r\n        </>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitMemoryWords(result)),\r\n    submitFinal: (result) => dispatch(submitResult(result)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MemoryWords)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../actions/authActions'\r\nimport './styles.css'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <div>\r\n            <ul className={props.className}>\r\n                <li><div onClick={props.signOut} className={props.className} >Выход</div></li>\r\n                <li><NavLink to='/profile' className={props.className}>Профиль: {props.profile.firstName}</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks) // null replaced mapstatetoprops","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './styles.css'\r\n\r\nconst SignedOutLinks = (props) => {\r\n    return (\r\n        <div>\r\n            <ul className=\"nav-right\">\r\n                <li><NavLink to='/signup' className={props.className}>Регистрация</NavLink></li>\r\n                <li><NavLink to='/signin' className={props.className}>Вход</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {makeStyles, AppBar, Toolbar, Typography} from \"@material-ui/core\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./styles.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    navBar: {\r\n        backgroundColor: '#d8f0de',\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: \"black\",\r\n    }\r\n}));\r\n\r\nconst Navbar = props => {\r\n    const classes = useStyles();\r\n    const {auth, profile} = props;\r\n    const links = auth.uid ? (\r\n        <SignedInLinks profile={profile} className={classes.link}/>\r\n    ) : (\r\n        <SignedOutLinks className={classes.link}/>\r\n    );\r\n    return (\r\n        <AppBar position=\"static\" className={classes.navBar}>\r\n            <Toolbar className=\"container inner-wrapper\">\r\n                <Typography variant=\"h6\">\r\n                    <Link to=\"/\" className={classes.link}>Главная</Link>\r\n                </Typography>\r\n\r\n                {links}\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\n\r\nexport const SummaryBlock = ({count = 0, memoryWords = 0 , perception = 0 , shulte = 0, shulteRed = 0}) => {\r\n  return (<div>\r\n    <div>\r\n      Таблицы шульте: {shulte}\r\n    </div>\r\n    <div>\r\n      Чернокрасные таблицы Шульте: {shulteRed}\r\n    </div>\r\n    <div>\r\n      Корректурная проба: {perception}\r\n    </div>\r\n    <div>\r\n      Счет: {count}\r\n    </div>\r\n    <div>\r\n      Запоминание слов: {memoryWords}\r\n    </div>\r\n  </div>);\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport get from 'lodash-es/get';\r\nimport {createProject} from \"../../actions/projectActions\";\r\nimport {Button} from \"../Button\";\r\nimport {SummaryBlock} from '../SummaryBlock';\r\nimport './styles.css';\r\n\r\nclass CurrentSummary extends Component {\r\n  state = {\r\n    showSummary: false,\r\n  };\r\n  showResults = () => {\r\n    this.props.createProject(this.props.project);\r\n    this.setState({showSummary: true});\r\n  };\r\n\r\n  render() {\r\n    const {auth, project} = this.props;\r\n    const {count, memoryWords, perception, shulte, shulteRed} = get(project, 'generalResult', {});\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return <div className='summary-container'>\r\n      <div className='summary-button'>\r\n        {!this.state.showSummary && <Button onClick={this.showResults} text='Посмотреть результаты'/>}\r\n      </div>\r\n      {this.state.showSummary &&\r\n      <div>\r\n        Ваши результаты:\r\n        <SummaryBlock\r\n        count={count}\r\n        memoryWords={memoryWords}\r\n        perception={perception}\r\n        shulte={shulte}\r\n        shulteRed={shulteRed}\r\n      />\r\n      </div>\r\n      }\r\n    </div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentSummary)","import React, { Component } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Signin from './components/auth/SignIn';\r\nimport Signup from './components/auth/SignUp';\r\nimport Test from './components/Test';\r\nimport Summary from './components/Summary';\r\nimport Train from './components/Train';\r\nimport Sample from './components/Sample';\r\nimport Shulte from './components/Sample/Shulte';\r\nimport ShulteRed from './components/Sample/ShulteRed';\r\nimport Perception from './components/Sample/Perception';\r\nimport Count from './components/Sample/Count';\r\nimport MemoryWords from './components/Sample/MemoryWords';\r\nimport Navbar from './components/Navbar';\r\nimport CurrentSummary from './components/CurrentSummary';\r\nimport './styles.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route exact path='/signin' component={Signin} />\r\n          <Route exact path='/signup' component={Signup} />\r\n          <Route exact path='/test' component={Test} />\r\n          <Route exact path='/train' component={Train} />\r\n          <Route exact path='/profile' component={Summary} />\r\n          <Route exact path='/summary' component={Summary} />\r\n          <Route exact path='/test/sample' component={Sample} />\r\n          <Route exact path='/test/shulte' component={Shulte} />\r\n          <Route exact path='/test/shulte-red' component={ShulteRed} />\r\n          <Route exact path='/test/perception' component={Perception} />\r\n          <Route exact path='/test/count' component={Count} />\r\n          <Route exact path='/test/memory-words' component={MemoryWords} />\r\n          <Route exact path='/test/current-summary' component={CurrentSummary} />\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from 'redux-thunk';\r\nimport {reduxFirestore, getFirestore} from 'redux-firestore';\r\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase';\r\nimport fbConfig from './config/fbConfig';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {persistStore} from 'redux-persist';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\r\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}), // redux binding for firebase\r\n    reduxFirestore(fbConfig) // redux bindings for firestore\r\n  )\r\n);\r\n\r\nconst rehydrate = () => persistStore(store);\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n  rehydrate(\r\n    ReactDOM.render(\r\n      <Provider store={store}>\r\n        <HashRouter basename='/'>\r\n          <App/>\r\n        </HashRouter>\r\n      </Provider>,\r\n      document.getElementById('root')))\r\n});\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}