{"version":3,"sources":["config/fbConfig.js","reducers/authReducer.js","reducers/projectReducer.js","reducers/testReducers.js","actions/testHelpers.js","actions/generalHelpers.js","reducers/generalReducers.js","reducers/rootReducer.js","components/Home/index.js","components/auth/SignIn/index.js","actions/authActions.js","components/auth/SignUp/index.js","components/Test/index.js","components/Charts/index.js","components/AdminCharts/index.js","components/AdminSummary/index.js","components/Summary/index.js","actions/projectActions.js","components/Sample/index.js","components/Train/index.js","components/Sample/Shulte/Information/index.js","components/Sample/Timer/index.js","components/Button/index.js","components/Sample/Shulte/index.js","components/Sample/ShulteRed/index.js","components/Sample/Perception/index.js","components/Sample/Count/Numbers/index.js","components/Sample/TimerReverse/index.js","components/Sample/Count/Rows/index.js","components/Sample/Count/index.js","components/Sample/MemoryWords/index.js","components/Navbar/SignedInLinks.js","components/Navbar/SignedOutLinks.js","components/Navbar/index.js","components/SummaryBlock/index.js","components/CurrentSummary/index.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","initState","authError","authReducer","state","arguments","length","undefined","action","type","console","log","Object","objectSpread","err","message","projectReducer","combineReducers","setTime","payload","currentTime","submitResult","result","persistCombineReducers","key","storage","storageSession","perceptionResult","time","errors","shulteResult","shulteRedResult","countResult","memoryWordsResult","group","attempt","generalResult","defineProperty","name","finalScore","rootReducer","auth","project","firestoreReducer","firebaseReducer","current","testReducers","generalReducers","getAllProjects","get","compose","connect","profile","dispatch","setGroup","setAttempt","firestoreConnect","props","uid","collection","where","_ref","react_default","a","createElement","className","onClick","Link","to","Redirect","useStyles","makeStyles","theme","container","width","padding","margin","boxShadow","form","flexDirection","display","formItem","marginBottom","signIn","creds","credentials","getState","getFirebase","signInWithEmailAndPassword","email","password","then","catch","_useState","useState","_useState2","slicedToArray","formValues","setFormValues","handleChange","e","target","id","value","classes","Card","onSubmit","preventDefault","Typography","variant","TextField","placeholder","label","required","onChange","Grid","Button_Button","color","style","marginRight","backgroundColor","NavLink","radio","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","user","set","firstName","lastName","initials","RadioGroup","isExperimentalGroup","defaultValue","FormControlLabel","control","Radio","Charts","date","results","_ref$name","data","labels","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","react_chartjs_2_es","AdminCharts","newObj","forEach","r","concat","keys","map","obj","o","Math","round","random","toFixed","random_rgba","getProjects","createSelector","projects","orderBy","getAuthors","authors","Set","p","authorId","toConsumableArray","getGroups","SummaryAdmin","groups","_React$useState","React","_React$useState2","selectedAuth","setAuth","onChangeAuth","useCallback","_React$useState3","_React$useState4","selectedGroup","onChangeGroup","filteredProjects","filter","dateArray","Array","max","i","selected","author","shulte","shulteRed","perception","count","memoryWords","SummaryNonAdminContainer","createdAt","toDate","toLocaleDateString","Summary","_ref2","createProject","add","authorFirstName","authorLastName","Date","CreateProject","title","content","_this","setState","handleSubmit","history","push","this","htmlFor","Component","Sample","Information","prevProps","_this$props","end","error","errorMessage","instructionNote","Timer","timer","counter","tick","setInterval","clearInterval","actions","Button","_Component","_getPrototypeOf2","classCallCheck","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","nameOfClass","inherits","createClass","text","Shulte","errorCounter","startTraining","endTraining","tableLength","numbers","sort","userNumbers","cellVerify","cell","slice","getFinalScore","setNext","submitFinal","abortTest","currentErrors","_this2","Fragment","Shulte_Information","Sample_Timer","components_Button_Button","submitShulte","ShulteRed","countBackwards","redLength","blackLength","red","black","userRed","userBlack","parseInt","submitShulteRed","Perception","letter","searchedLetter","gridLength","letters","newLetters","longLetters","guessedCells","index","includes","innerText","getTime","submitPerseption","Numbers","firstNumber","floor","secondNumber","sign","checkResult","first","second","abs","setAnswer","elIndex","res","disabled","onBlur","TimerReverse","maxTime","passedFunction","Rows","row","rowAnswer","ans","submitRow","startNextRow","submitLastRow","_this$props2","currentRow","rowLength","lineLength","number","j","Numbers_Numbers","Sample_TimerReverse","numberOfRows","Count","answer","arrayAnswer","firstArray","flattenDeep","secondArray","firstResult","reduce","b","secondResult","finalResult","item","Rows_Rows","submitCount","words","MemoryWords","showWords","correct","endMemorizing","checkWords","wordsLower","word","toLowerCase","values","join","autoComplete","submitMemoryWords","signOut","SignedOutLinks","navBar","link","textDecoration","links","Navbar_SignedInLinks","Navbar_SignedOutLinks","AppBar","position","Toolbar","SummaryBlock","_ref$count","_ref$memoryWords","_ref$perception","_ref$shulte","_ref$shulteRed","CurrentSummary","showSummary","showResults","_get","SummaryBlock_SummaryBlock","App","components_Navbar","Switch","Route","exact","path","component","Home","Signin","Signup","Test","Train","Boolean","window","location","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","HashRouter","basename","src_App","document","getElementById","persistStore","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d86dff3d.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth'\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyCZnBjFCvxM90C-WIcjuVwzUPAgr2782QA\",\r\n    authDomain: \"psy-testing.firebaseapp.com\",\r\n    databaseURL: \"https://psy-testing.firebaseio.com\",\r\n    projectId: \"psy-testing\",\r\n    storageBucket: \"psy-testing.appspot.com\",\r\n    messagingSenderId: \"209166839391\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nfirebase.firestore();\r\n\r\nexport default firebase ","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default authReducer;","export const initState = {}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  console.log(\"State in project reducer\", action, state)\r\n\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT_SUCCESS':\r\n      console.log('create project success');\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error');\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;","import { combineReducers } from \"redux\";\r\nimport { SET_TIME } from '../actions/testHelpers';\r\n\r\nexport const setTime = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case SET_TIME:\r\n            return action.payload.currentTime;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default combineReducers({\r\n    setTime\r\n})\r\n","export const SET_TIME = \"current/SET_TIME\";\r\n\r\nexport const setTime = (currentTime = \"\") => ({\r\n    type: SET_TIME,\r\n    payload: { currentTime }\r\n});","export const SUBMIT_PERCEPTION = \"general/SUBMIT_PERCEPTION\";\r\nexport const SUBMIT_SHULTE = \"general/SUBMIT_SHULTE\";\r\nexport const SUBMIT_SHULTE_RED = \"general/SUBMIT_SHULTE_RED\";\r\nexport const SUBMIT_COUNT = \"general/SUBMIT_COUNT\";\r\nexport const SUBMIT_MEMORY_WORDS = \"general/SUBMIT_MEMORY_WORDS\";\r\nexport const SUBMIT_RESULT = \"general/SUBMIT_RESULT\";\r\nexport const SET_GROUP = \"general/SET_GROUP\";\r\nexport const SET_ATTEMPT =\"general/SET_ATTEMPT\";\r\n\r\nexport const submitPerseption = (result = {}) => ({\r\n  type: SUBMIT_PERCEPTION,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitShulte = (result = {}) => ({\r\n  type: SUBMIT_SHULTE,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitShulteRed = (result = {}) => ({\r\n  type: SUBMIT_SHULTE_RED,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitCount = (result = {}) => ({\r\n  type: SUBMIT_COUNT,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitMemoryWords = (result = {}) => ({\r\n  type: SUBMIT_MEMORY_WORDS,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitResult = (result = {}) => ({\r\n  type: SUBMIT_RESULT,\r\n  payload: {result}\r\n});\r\n\r\nexport const setGroup = (group = '') => ({\r\n  type: SET_GROUP,\r\n  payload: group\r\n});\r\n\r\nexport const setAttempt = (attempt = 0) => ({\r\n  type: SET_ATTEMPT,\r\n  payload: attempt\r\n});","import {persistCombineReducers} from 'redux-persist';\r\nimport storageSession from 'redux-persist/lib/storage/session';\r\nimport {\r\n  SUBMIT_COUNT,\r\n  SUBMIT_MEMORY_WORDS,\r\n  SUBMIT_PERCEPTION,\r\n  SUBMIT_SHULTE,\r\n  SUBMIT_SHULTE_RED,\r\n  SUBMIT_RESULT,\r\n  SET_GROUP,\r\n  SET_ATTEMPT,\r\n} from '../actions/generalHelpers';\r\n\r\nexport const perceptionResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_PERCEPTION:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const shulteResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_SHULTE:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const shulteRedResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_SHULTE_RED:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const countResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_COUNT:\r\n      return {\r\n        ...state,\r\n        result: action.payload.result,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const memoryWordsResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_MEMORY_WORDS:\r\n      return {\r\n        ...state,\r\n        result: action.payload.result,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const generalResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_RESULT:\r\n      return {\r\n        ...state,\r\n        [action.payload.result.name]: action.payload.result.finalScore,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const group = (state = '', action) => {\r\n  switch (action.type) {\r\n    case SET_GROUP:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const attempt = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case SET_ATTEMPT:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport default persistCombineReducers(\r\n  {\r\n    key: 'psyTesting',\r\n    storage: storageSession,\r\n  },\r\n  {\r\n    perceptionResult,\r\n    shulteResult,\r\n    shulteRedResult,\r\n    countResult,\r\n    memoryWordsResult,\r\n    group,\r\n    attempt,\r\n    generalResult,\r\n  })\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport testReducers from './testReducers';\r\nimport generalReducers from './generalReducers';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n    current: testReducers,\r\n    result: generalReducers\r\n});\r\n\r\nexport default rootReducer","import React from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport './styles.css'\r\nimport {setGroup, setAttempt} from \"../../actions/generalHelpers\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {firestoreConnect} from \"react-redux-firebase\";\r\nimport get from \"lodash-es/get\";\r\n\r\nconst Home = ({setGroup, group, setAttempt, attempt, auth}) => {\r\n  if (!auth.uid) {\r\n    return <Redirect to='/signin'/>;\r\n  }\r\n  return (\r\n        <div className=\"container home-container\">\r\n          <h3>\r\n            Добро пожаловать на сайт для исследования психологических харастеристик, наиболее важных для программистов!\r\n          </h3>\r\n          <br/>\r\n          <div>\r\n            Вам будет предложено 5 методик, направленных на исследование уровня концентрации, объема, распределения и переключения\r\n            внимания, памяти, мышления. Перед началом каждой методики будут даны инструкции и запущен таймер.\r\n          </div>\r\n          <br/>\r\n            <div className=\"home-item\" onClick={() => {setGroup(group); setAttempt(attempt + 1)}}><Link to='/test/shulte'>Начать</Link></div>\r\n\r\n        </div>\r\n    )\r\n};\r\nconst getAllProjects = (state) => get(state, 'firestore.ordered.projects', []);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    group: state.firebase.profile.group,\r\n    attempt: getAllProjects(state).length,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setGroup: (group) => dispatch(setGroup(group)),\r\n    setAttempt: (attempt) => dispatch(setAttempt(attempt)),\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(props => {\r\n      return props.auth.uid ? [\r\n        { collection: 'projects', where: [['authorId', '==', props.auth.uid]] }\r\n      ] : []\r\n    })\r\n)(Home)","import React, { useState } from \"react\";\r\nimport { TextField, makeStyles, Button, Card, Grid, Typography } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport { signIn } from \"../../../actions/authActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    width: 600,\r\n    padding: 15,\r\n    margin: \"300px auto\",\r\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\"\r\n  },\r\n  form: {\r\n    flexDirection: \"column\",\r\n    display: \"flex\"\r\n  },\r\n  formItem: {\r\n    marginBottom: 15\r\n  }\r\n}));\r\n\r\nconst SignIn = (props) => {\r\n  const [formValues, setFormValues] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.signIn(formValues);\r\n  };\r\n  const classes = useStyles();\r\n  const { authError, auth } = props;\r\n  if (auth.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Card className={classes.container}>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h5\" className=\"grey-text text-darken-3\">Войти</Typography>\r\n        <TextField\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Введите email\"\r\n          label=\"Email адрес\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.email}\r\n          className={classes.formItem}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Введите пароль\"\r\n          label=\"Пароль\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.password}\r\n          className={classes.formItem}\r\n        />\r\n        <Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ marginRight: 20,  backgroundColor: '#d8f0de', color: 'black' }}\r\n          >\r\n            Войти\r\n          </Button>\r\n          {authError && <p>{authError}</p>}\r\n        </Grid>\r\n      </form>\r\n      <br/>\r\n      <p>Нет аккаунта? <NavLink to='/signup' className={props.className}>Зарегистрируйся</NavLink></p>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({type: 'LOGIN_SUCCESS'});\r\n    }).catch((err) => {\r\n      dispatch({type: 'LOGIN_ERROR', err});\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({type: 'SIGNOUT_SUCCESS'})\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then(resp => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0],\r\n        group: newUser.group,\r\n      });\r\n    }).then(() => {\r\n      dispatch({type: 'SIGNUP_SUCCESS'});\r\n    }).catch((err) => {\r\n      dispatch({type: 'SIGNUP_ERROR', err});\r\n    });\r\n  }\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  makeStyles,\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  Typography,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio\r\n} from \"@material-ui/core\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../../actions/authActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    width: 600,\r\n    padding: 15,\r\n    margin: \"200px auto\",\r\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\"\r\n  },\r\n  form: {\r\n    flexDirection: \"column\",\r\n    display: \"flex\"\r\n  },\r\n  formItem: {\r\n    marginBottom: 15\r\n  },\r\n  radio: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n  }\r\n}));\r\n\r\nconst Signup = props => {\r\n  const [formValues, setFormValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    group: \"control\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const setGroup = e => {\r\n    setFormValues({\r\n      ...formValues,\r\n      group: e.target.value\r\n    });\r\n    console.log(formValues)\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.signUp(formValues);\r\n  };\r\n  const classes = useStyles();\r\n  const { authError, auth } = props;\r\n  if (auth.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Card className={classes.container}>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h5\" className=\"grey-text text-darken-3\">\r\n          Зарегистрироваться\r\n        </Typography>\r\n        <TextField\r\n          id=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Введите email\"\r\n          label=\"Email адрес\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.email}\r\n          className={classes.formItem}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Введите пароль\"\r\n          label=\"Пароль\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.password}\r\n          className={classes.formItem}\r\n        />\r\n        <TextField\r\n          id=\"firstName\"\r\n          type=\"text\"\r\n          placeholder=\"Введите имя\"\r\n          label=\"Имя\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.firstName}\r\n          className={classes.formItem}\r\n        />\r\n        <TextField\r\n          id=\"lastName\"\r\n          type=\"text\"\r\n          placeholder=\"Введите фамилию\"\r\n          label=\"Фамилия\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.lastName}\r\n          className={classes.formItem}\r\n        />\r\n        <Typography variant=\"h6\">Группа</Typography>\r\n        <RadioGroup\r\n          name=\"group\"\r\n          value={formValues.isExperimentalGroup}\r\n          onChange={setGroup}\r\n          className={classes.radio}\r\n          defaultValue={formValues.group}\r\n        >\r\n          <FormControlLabel\r\n            id=\"isExperimentalGroup\"\r\n            value=\"experimental\"\r\n            control={<Radio />}\r\n            label=\"Экспериментальная\"\r\n          />\r\n          <FormControlLabel\r\n            id=\"isExperimentalGroup\"\r\n            value=\"control\"\r\n            control={<Radio />}\r\n            label=\"Контрольная\"\r\n          />\r\n        </RadioGroup>\r\n        <Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ marginRight: 20,  backgroundColor: '#d8f0de', color: 'black' }}\r\n          >\r\n            Зарегистрироваться\r\n          </Button>\r\n          {authError && <p>{authError}</p>}\r\n        </Grid>\r\n      </form>\r\n      <br/>\r\n      <p>Уже есть аккаунт? <NavLink to='/signin' className={props.className}>Войти</NavLink></p>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: creds => dispatch(signUp(creds))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Signup);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\n//import { firestoreConnect } from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport './styles.css'\r\n\r\nconst Test = (props) => {\r\n  const {auth} = props;\r\n  if (!auth.uid) return <Redirect to='/signin'/>;\r\n  return (\r\n    <div className=\"container\">\r\n      {/* <Link to='/test/sample'>Sample</Link>  */}\r\n      <div className=\"test-home\">\r\n        <Link to='/test/shulte'>Начать тест Шульте</Link>\r\n        <br/>\r\n        <Link to='/test/shulte-red'>Начать тест Шульте в модификации Горбова</Link>\r\n        <br/>\r\n        <Link to='/test/perception'>Начать методику корректурные пробы</Link>\r\n        <br/>\r\n        <Link to='/test/count'>Начать методику счет по Крепелину</Link>\r\n        <br/>\r\n        <Link to='/test/memory-words'>Начать методику \"Запоминание слов\"</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps)\r\n)(Test)","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nexport function Charts ({date, results, name = ''})  {\r\n  const data = {\r\n    labels: date,\r\n    datasets: [\r\n      {\r\n        label: name,\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: 'rgba(75,192,192,0.4)',\r\n        borderColor: 'rgba(75,192,192,1)',\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        pointBorderColor: 'rgba(75,192,192,1)',\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: results\r\n      },\r\n    ]\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>{name}</h2>\r\n      <Line data={data} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {normalize, schema} from 'normalizr';\r\nimport get from 'lodash-es/get';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\n//нам приходит массив, но удобнее работать с объектом, поэтому нормализуем\r\nfunction getNormalizedContent(contentSettingsMapping) {\r\n  const data = contentSettingsMapping;\r\n  const element = new schema.Entity('elements', {}, {idAttribute: 'id'});\r\n  const normalizedData = normalize(data, [element]);\r\n  return get(normalizedData, 'entities.elements', {});\r\n}\r\n\r\nfunction random_rgba() {\r\n  var o = Math.round, r = Math.random, s = 255;\r\n  return 'rgba(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + r().toFixed(1) + ')';\r\n}\r\n\r\nexport function AdminCharts({date, results, name = ''}) {\r\n//normalize to make id the key and array with {result, attempt} or array of result for each user\r\n  // const res = results.map()\r\n  const newObj = {};\r\n  results.forEach(r => {\r\n    return newObj[r.id] ? newObj[r.id] = newObj[r.id].concat(r.result) : newObj[r.id] = [r.result];\r\n  });\r\n\r\n  console.log('newObj', newObj);\r\n  const dataset = Object.keys(newObj).map(obj => {\r\n    const color = random_rgba();\r\n    return {\r\n    label: obj,\r\n    fill: false,\r\n    lineTension: 0.1,\r\n    backgroundColor: 'rgba(75,192,192,0.4)',\r\n    borderColor: color,\r\n    borderCapStyle: 'butt',\r\n    borderDash: [],\r\n    borderDashOffset: 0.0,\r\n    borderJoinStyle: 'miter',\r\n    pointBorderColor: 'rgba(75,192,192,1)',\r\n    pointBackgroundColor: '#fff',\r\n    pointBorderWidth: 1,\r\n    pointHoverRadius: 5,\r\n    pointHoverBackgroundColor: color,\r\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n    pointHoverBorderWidth: 2,\r\n    pointRadius: 1,\r\n    pointHitRadius: 10,\r\n    data: newObj[obj]\r\n  }});\r\n\r\n  const data = {\r\n    labels: date,\r\n    datasets: dataset,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{name}</h2>\r\n      <Line data={data}/>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport get from 'lodash-es/get';\r\nimport max from 'lodash-es/max';\r\nimport {createSelector} from \"reselect\";\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport orderBy from 'lodash-es/orderBy';\r\nimport {AdminCharts} from \"../AdminCharts\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst getAllProjects = (state) => get(state, 'firestore.ordered.projects', []);\r\nconst getProjects = createSelector(\r\n  getAllProjects,\r\n  (projects) => orderBy(projects, ['createdAt'], ['asc'])\r\n);\r\nconst getAuthors = createSelector(\r\n  getAllProjects,\r\n  (projects) => {\r\n    const authors = new Set(projects.map(p => p.authorId));\r\n    return [...authors].concat('all');\r\n  }\r\n);\r\nconst getGroups = createSelector(\r\n  getAllProjects,\r\n  (projects) => {\r\n    const group = new Set(projects.map(p => p.group));\r\n    return [...group].concat('all')\r\n  }\r\n);\r\n\r\nconst SummaryAdminView = ({projects, auth, authors, groups}) => {\r\n  const [selectedAuth, setAuth] = React.useState('all');\r\n  const onChangeAuth = React.useCallback((e) => setAuth(e.target.value), []);\r\n  const [selectedGroup, setGroup] = React.useState('all');\r\n  const onChangeGroup = React.useCallback((e) => setGroup(e.target.value), []);\r\n  const filteredProjects = projects.filter(project => (project.authorId === selectedAuth || selectedAuth === 'all') &&\r\n    (project.group === selectedGroup || selectedGroup === 'all')\r\n  );\r\n  //const dateArray = filteredProjects.map(project => project.createdAt ? project.createdAt.toDate().toLocaleDateString() : 0);\r\n  const dateArray = Array(max(filteredProjects.map(project => project.attempt || 0))).fill().map((e, i) => i + 1);\r\n  if (!auth.uid) return <Redirect to='/signin'/>;\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary summary-container\">\r\n      <h3>Admin</h3>\r\n      <p>Выбрать группу: </p>\r\n      <select onChange={onChangeGroup} value={selectedGroup}>{groups.map(group =>\r\n        <option value={group} selected={group === selectedGroup}>{group}</option>\r\n      )}</select>\r\n      <p>Выбрать пользователя: </p>\r\n      {/*check that users with same last name have their data under one account*/}\r\n      <select onChange={onChangeAuth} value={selectedAuth}>{authors.map(author =>\r\n        <option value={author} selected={author === selectedAuth}>{author}</option>\r\n      )}</select>\r\n\r\n      <AdminCharts date={dateArray}\r\n                   results={filteredProjects.map(project => project.generalResult ?\r\n                     {result: project.generalResult.shulte, attempt: project.attempt, id: project.authorId} || 0 : 0)}\r\n                   name='Таблицы Шульте'\r\n      />\r\n      Снижение показателя говорит об увеличении концентрации внимания\r\n      <AdminCharts date={dateArray}\r\n                   results={filteredProjects.map(project => project.generalResult ? {\r\n                     result: project.generalResult.shulteRed,\r\n                     attempt: project.attempt,\r\n                     id: project.authorId\r\n                   } || 0 : 0)}\r\n                   name='Черно-Красные Таблицы Шульте'\r\n      />\r\n      Снижение показателя говорит об улучшении переключаемости внимания\r\n      <AdminCharts date={dateArray}\r\n                   results={filteredProjects.map(project => project.generalResult ? {\r\n                     result: project.generalResult.perception,\r\n                     attempt: project.attempt,\r\n                     id: project.authorId\r\n                   } || 0 : 0)}\r\n                   name='Корректурные пробы'\r\n      />\r\n      Снижение показателя говорит об улучшении устойчивости внимания\r\n      <AdminCharts date={dateArray}\r\n                   results={filteredProjects.map(project => project.generalResult ? {\r\n                     result: project.generalResult.count,\r\n                     attempt: project.attempt,\r\n                     id: project.authorId\r\n                   } || 0 : 0)}\r\n                   name='Счет'\r\n      />\r\n      Результат близкий к единице говорит о хорошей устойчивости внимания и низкой истощаемости\r\n      <AdminCharts date={dateArray}\r\n                   results={filteredProjects.map(project => project.generalResult ? {\r\n                     result: project.generalResult.memoryWords,\r\n                     attempt: project.attempt,\r\n                     id: project.authorId\r\n                   } || 0 : 0)}\r\n                   name='Запоминание слов'\r\n      />\r\n      Увеличение показателя говорит об улучшении памяти\r\n    </div>\r\n  )\r\n};\r\n\r\nexport const SummaryAdmin = compose(\r\n  connect((state) => ({\r\n    projects: getProjects(state),\r\n    auth: state.firebase.auth,\r\n    authors: getAuthors(state),\r\n    groups: getGroups(state),\r\n  })),\r\n  firestoreConnect(props => {\r\n    return [\r\n      {collection: 'projects'}\r\n    ]\r\n  })\r\n)(SummaryAdminView);\r\n","import React from 'react';\r\nimport { createSelector } from \"reselect\";\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport get from 'lodash-es/get';\r\nimport orderBy from 'lodash-es/orderBy';\r\nimport {Charts} from \"../Charts\";\r\nimport { SummaryAdmin } from '../AdminSummary';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst getAllProjects = (state) => get(state, 'firestore.ordered.projects', []);\r\nconst getProjects = createSelector(\r\n  getAllProjects,\r\n  (projects) => orderBy(projects, ['createdAt'],['asc'])\r\n);\r\n\r\nconst SummaryNonAdmin = ({ projects, auth }) => {\r\n  const filteredProjects = projects.filter(project => project.authorId === auth.uid);\r\n  const dateArray = filteredProjects.map(project => project.createdAt ? project.createdAt.toDate().toLocaleDateString() : 0);\r\n  if (!auth.uid) return <Redirect to='/signin'/>;\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary summary-container\">\r\n      <Charts date={dateArray}\r\n              results={filteredProjects.map(project => project.generalResult ? project.generalResult.shulte || 0 : 0)}\r\n              name='Таблицы Шульте'\r\n      />\r\n      Снижение показателя говорит об увеличении концентрации внимания\r\n      <Charts date={dateArray}\r\n              results={filteredProjects.map(project => project.generalResult ? project.generalResult.shulteRed || 0 : 0)}\r\n              name='Черно-Красные Таблицы Шульте'\r\n      />\r\n      Снижение показателя говорит об улучшении переключаемости внимания\r\n      <Charts date={dateArray}\r\n              results={filteredProjects.map(project => project.generalResult ? project.generalResult.perception || 0 : 0)}\r\n              name='Корректурные пробы'\r\n      />\r\n      Снижение показателя говорит об улучшении устойчивости внимания\r\n      <Charts date={dateArray}\r\n              results={filteredProjects.map(project => project.generalResult ? project.generalResult.count || 0 : 0)}\r\n              name='Счет'\r\n      />\r\n      Результат близкий к единице говорит о хорошей устойчивости внимания и низкой истощаемости\r\n      <Charts date={dateArray}\r\n              results={filteredProjects.map(project => project.generalResult ? project.generalResult.memoryWords || 0 : 0)}\r\n              name='Запоминание слов'\r\n      />\r\n      Увеличение показателя говорит об улучшении памяти\r\n    </div>\r\n  )\r\n};\r\n\r\nconst SummaryNonAdminContainer = compose(\r\n  connect((state) => ({\r\n    projects: getProjects(state),\r\n    auth: state.firebase.auth,\r\n  })),\r\n  firestoreConnect(props => {\r\n    return props.auth.uid ? [\r\n      { collection: 'projects', where: [['authorId', '==', props.auth.uid]] }\r\n    ] : [];\r\n  })\r\n)(SummaryNonAdmin);\r\n\r\nexport const Summary =\r\n  connect((state) => ({\r\n    auth: state.firebase.auth,\r\n  })\r\n)(({auth}) => {\r\nif (auth.uid === \"UuE6qoYQJAV63WZZHvvbJnTLiKE2\") {\r\n  return <SummaryAdmin />\r\n}\r\nreturn <SummaryNonAdminContainer/>\r\n});","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n    }).catch(err => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n//import { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Sample from '../Sample';\r\n\r\nconst Train = (props) => {\r\n  const { auth } = props;\r\n  if (!auth.uid) return <Redirect to='/signin' />\r\n  return (\r\n    <div>\r\n      Train\r\n      <Sample history={props.history} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps)\r\n)(Train)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Information extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    return prevProps.time !== this.props.time || prevProps.errors !== this.props.errors;\r\n  }\r\n  render() {\r\n    const {end, errors, error, errorMessage, instructionNote, time} = this.props;\r\n    return (\r\n      <div className='info'>\r\n        {\r\n          end ? <p>Тестирование завершено! Ваше время: {time} сек. Количество ошибок: {errors}.</p> :\r\n            error ? <p className='info__error'>{errorMessage}</p> :\r\n              <p>{instructionNote}</p>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    time: state.current.setTime\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Information)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {setTime} from '../../../actions/testHelpers';\r\n\r\nclass Timer extends Component {\r\n  state = {\r\n    timer: null,\r\n    counter: 0\r\n  };\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      counter: this.state.counter + 1\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let timer = setInterval(this.tick, 1000);\r\n    this.setState({ timer });\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.setTime(this.state.counter);\r\n    clearInterval(this.state.timer);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='timer'>\r\n        {this.state.counter} сек.\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setTime\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  actions\r\n)(Timer);","import React, {Component} from 'react';\r\nimport './styles.css'\r\n\r\nexport class Button extends Component {\r\n  nameOfClass = () => {\r\n    switch (this.props.nameOfClass) {\r\n      case 'next':\r\n        return 'button-next';\r\n      default:\r\n        return 'button-main';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {text, onClick} = this.props;\r\n    return (\r\n      <button className={this.nameOfClass()} onClick={onClick}>{text}</button>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../../actions/projectActions'\r\nimport {submitShulte, submitResult} from '../../../actions/generalHelpers'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Information from './Information'\r\nimport Timer from '../Timer'\r\nimport {Button} from \"../../Button\";\r\nimport './styles.css';\r\n\r\nclass Shulte extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n  };\r\n\r\n  tableLength = 25; //25\r\n  numbers = Array(this.tableLength).fill().map((e, i) => i + 1).sort(() => Math.random() - 0.5);\r\n  userNumbers = [0];\r\n  cellVerify = (cell) => {\r\n    this.setState({error: false});\r\n    if (this.userNumbers.slice(-1)[0] + 1 === cell) {\r\n      this.userNumbers.push(cell);\r\n      if (this.userNumbers.slice(-1)[0] === this.tableLength) {\r\n        this.setState({endTraining: true})\r\n      }\r\n    } else {\r\n      this.setState({error: true});\r\n      if (this.userNumbers.length <= this.tableLength && cell !== 25) {\r\n        let error = this.state.errorCounter + 1;\r\n        this.setState({errorCounter: error})\r\n      }\r\n    }\r\n  };\r\n\r\n  getFinalScore = () => {\r\n    return this.props.time * 0.1 + this.state.errorCounter;\r\n  };\r\n\r\n  setNext = () => {\r\n    const finalScore = this.getFinalScore();\r\n    this.props.submitResult({time: this.props.time, errors: this.state.errorCounter});\r\n    this.props.submitFinal ({finalScore, name: 'shulte'});\r\n    this.props.history.push('/test/shulte-red');\r\n  };\r\n\r\n  abortTest = () => {\r\n    const currentErrors = this.state.errorCounter + (this.tableLength - this.userNumbers.length);\r\n    this.setState({errorCounter: currentErrors});\r\n    this.setState({endTraining: true});\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка различных аспектов внимания</p>\r\n        <p>\r\n          Кликайте на цифры по очереди от 1 до 25-ти. Задание выполняется на время.\r\n        </p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Начните поиск цифр от 1 до 25'}</span>\r\n          <button className='start-btn' onClick={() =>\r\n            this.setState({startTraining: true})}>\r\n            Начать\r\n          </button>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n          <Information\r\n            error={this.state.error}\r\n            end={this.state.endTraining}\r\n            errors={this.state.errorCounter}\r\n            errorMessage={'Неверное число!'}\r\n            instructionNote={'Найдите числа!'}\r\n          />\r\n\r\n          <div className='table'>\r\n            {\r\n              this.numbers.map((e) =>\r\n                <div key={e} onClick={() => this.cellVerify(e)} className='cell'>{e}</div>)\r\n            }\r\n          </div>\r\n          {!this.state.endTraining && <> <Timer/> <Button text='Завершить тестирование' onClick={this.abortTest} />\r\n          <div>Все не найденные числа защитаются как ошибки!</div> </>}\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining && <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitShulte(result)),\r\n    submitFinal: (result) => dispatch(submitResult(result)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shulte)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../../actions/projectActions'\r\nimport {submitResult, submitShulteRed} from '../../../actions/generalHelpers'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Information from '../Shulte/Information'\r\nimport Timer from '../Timer'\r\nimport './styles.css';\r\nimport {Button} from \"../../Button\";\r\n\r\nclass ShulteRed extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n    countBackwards: false,\r\n  };\r\n\r\n  redLength = 24; //24\r\n  blackLength = 25; //25\r\n  red = Array(this.redLength).fill().map((e, i) => i + 1 + 'r');\r\n  black = Array(this.blackLength).fill().map((e, i) => i + 1 + 'b');\r\n  numbers = this.red.concat(this.black).sort(() => Math.random() - 0.5);\r\n  userRed = [`${this.redLength + 1}r`];\r\n  userBlack = ['0b'];\r\n  cellVerify = (cell) => {\r\n    this.setState({error: false});\r\n    if (this.state.countBackwards) {\r\n      if (parseInt(this.userRed.slice(-1)[0]) - 1 + \"r\" === cell) {\r\n        this.userRed.push(cell);\r\n        this.setState({countBackwards: false});\r\n      } else {\r\n        this.setState({error: true});\r\n        if (this.userRed.length <= this.redLength && cell !== 24) {\r\n          let error = this.state.errorCounter + 1;\r\n          this.setState({errorCounter: error})\r\n        }\r\n      }\r\n    } else if (!this.state.countBackwards) {\r\n      if (parseInt(this.userBlack.slice(-1)[0]) + 1 + \"b\" === cell) {\r\n        this.userBlack.push(cell);\r\n        this.setState({countBackwards: true});\r\n        if (parseInt(this.userBlack.slice(-1)[0]) === this.blackLength) {\r\n          this.setState({endTraining: true})\r\n        }\r\n      } else {\r\n        this.setState({error: true});\r\n        if (this.userBlack.length <= this.blackLength && cell !== 25) {\r\n          let error = this.state.errorCounter + 1;\r\n          this.setState({errorCounter: error})\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  getFinalScore = () => {\r\n    return this.props.time * 0.1 + this.state.errorCounter;\r\n  };\r\n\r\n  setNext = () => {\r\n    const finalScore = this.getFinalScore();\r\n    this.props.submitResult({time: this.props.time, errors: this.state.errorCounter});\r\n    this.props.submitFinal ({finalScore, name: 'shulteRed'});\r\n    this.props.history.push('/test/perception');\r\n  };\r\n\r\n  abortTest = () => {\r\n    const currentErrors = this.state.errorCounter + (this.redLength + this.blackLength - this.userRed.length - this.userBlack.length);\r\n    this.setState({errorCounter: currentErrors});\r\n    this.setState({endTraining: true});\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка различных аспектов внимания</p>\r\n        <p>\r\n          Кликайте на красные и черные цифры цифры по-переменно: черные - в порядке возрастания, красные в порядке убывания.\r\n        </p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Начните поиск цифр: 1 черный - 24 красный; 2 черный - 23 красный... '}</span>\r\n          <button className='start-btn' onClick={() =>\r\n            this.setState({startTraining: true})}>\r\n            Начать\r\n          </button>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n          <Information\r\n            error={this.state.error}\r\n            end={this.state.endTraining}\r\n            errors={this.state.errorCounter}\r\n            errorMessage={'Неверное число!'}\r\n            instructionNote={'Найдите числа: 1 черный - 24 красный; 2 черный - 23 красный...'}\r\n          />\r\n\r\n          <div className='table-wide'>\r\n            {\r\n              this.numbers.map((e) =>\r\n                <div className={e.slice(-1) === 'r' ? 'red cell-wide' : 'cell-wide'}\r\n                     key={e} onClick={() => this.cellVerify(e)}>{parseInt(e)}</div>)\r\n            }\r\n          </div>\r\n          {!this.state.endTraining && <> <Timer/> <Button text='Завершить тестирование' onClick={this.abortTest} />\r\n            <div>Все не найденные числа защитаются как ошибки!</div> </>}\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining &&\r\n        <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitShulteRed(result)),\r\n    submitFinal: (result) => dispatch(submitResult(result)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShulteRed)","import React, {Component} from 'react';\r\nimport Timer from '../Timer';\r\nimport Information from '../Shulte/Information';\r\nimport {createProject} from \"../../../actions/projectActions\";\r\nimport {submitPerseption, submitResult} from \"../../../actions/generalHelpers\";\r\nimport {connect} from \"react-redux\";\r\nimport './styles.css';\r\nimport {Button} from \"../../Button\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Perception extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false\r\n  };\r\n  letter = 'н';\r\n  searchedLetter = 'п';\r\n  gridLength = 252;  //252\r\n  letters = Array(this.gridLength).fill(this.letter);\r\n  newLetters = Array(4).fill(this.searchedLetter);\r\n  longLetters = this.letters.concat(this.newLetters).sort(() => Math.random() - 0.5);\r\n\r\n  guessedCells = [];\r\n  cellVerify = (cell, index) => {\r\n    this.setState({error: false});\r\n    if (cell === this.searchedLetter && !this.guessedCells.includes(index) && this.guessedCells.length <= this.newLetters.length) {\r\n      this.guessedCells.push(index);\r\n      if (this.newLetters.length === this.guessedCells.length) {\r\n        this.setState({endTraining: true});\r\n      }\r\n    } else {\r\n      this.setState({error: true, errorCounter: this.state.errorCounter + 1});\r\n    }\r\n\r\n  };\r\n  abortTest = () => {\r\n    this.setState({errorCounter: this.state.errorCounter + (this.newLetters.length - this.guessedCells.length)});\r\n    this.setState({endTraining: true});\r\n  };\r\n\r\n  getFinalScore = () => {\r\n    return this.props.time * 0.1 + this.state.errorCounter;\r\n  };\r\n\r\n  setNext = () => {\r\n    const finalScore = this.getFinalScore();\r\n    this.props.submitResult({time: this.props.time, errors: this.state.errorCounter});\r\n    this.props.submitFinal ({finalScore, name: 'perception'});\r\n    this.props.history.push('/test/count');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n        <div className='contents'>\r\n          <p>Корректурная проба</p>\r\n          <p>\r\n            Среди множества букв \"{this.letter}\" найдите все буквы \"{this.searchedLetter}\".\r\n          </p>\r\n          {!this.state.startTraining &&\r\n          <div className='message'>\r\n            <span className='start-message'>{`Найдите все буквы \"${this.searchedLetter}\"`}</span>\r\n            <button className='start-btn' onClick={() => this.setState({startTraining: true})}>Начать</button>\r\n          </div>\r\n          }\r\n          {this.state.startTraining &&\r\n          <React.Fragment>\r\n            <Information error={this.state.error} end={this.state.endTraining}\r\n                         errors={this.state.errorCounter}\r\n                         errorMessage={'Неверная буква!'}\r\n                         instructionNote={`Найдите все буквы \"${this.searchedLetter}\"`}\r\n            />\r\n            <div className='grid'>\r\n              {\r\n                this.longLetters.map((e, i) =>\r\n                  <div\r\n                    key={i}\r\n                    onClick={(e) => this.cellVerify(e.target.innerText, i)}\r\n                    className='letter'>{e}\r\n                  </div>)\r\n              }\r\n            </div>\r\n            {!this.state.endTraining && <> <Timer getTime={this.props.time}/> <Button text='Завершить тестирование' onClick={this.abortTest} /> </>}\r\n\r\n          </React.Fragment>\r\n          }\r\n          {this.state.endTraining && <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitPerseption(result)),\r\n    submitFinal: (result) => dispatch(submitResult(result)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Perception)","import React, {Component} from \"react\";\r\n\r\nexport class Numbers extends Component {\r\n  state = {\r\n    value: null,\r\n  };\r\n  firstNumber = Math.floor(Math.random() * (10 - 1)) + 1;\r\n  secondNumber = Math.floor(Math.random() * (10 - 1)) + 1;\r\n  sign = Math.round(Math.random());\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value\r\n    })\r\n  };\r\n\r\n  checkResult = () => {\r\n    const first = parseInt(this.firstNumber);\r\n    const second = parseInt(this.secondNumber);\r\n    const result = this.sign  ? first + second : Math.abs(first - second);\r\n    //return parseInt(this.state.value) === result ? console.log(\"yes\") : console.log(\"No\")\r\n    this.props.setAnswer({\r\n      index: this.props.elIndex,\r\n      res: Math.abs(parseInt(this.state.value)) === result ? 1 : 0})\r\n  };\r\n\r\n  render() {\r\n    const {firstNumber, secondNumber, sign} = this;\r\n    const {disabled} = this.props;\r\n\r\n    return (\r\n      <div className='cell-container'>\r\n        <div>{firstNumber}</div>\r\n        <div> {sign ? \"+\" : \"-\"} </div>\r\n        <div>{secondNumber}</div>\r\n        <input onChange={this.handleChange} disabled={disabled} onBlur={this.checkResult}\r\n        style={{width: '36px'}}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n//import {setTime} from '../../../actions/testHelpers';\r\n\r\nclass TimerReverse extends Component {\r\n  state = {\r\n    timer: null,\r\n    counter: this.props.maxTime\r\n  };\r\n\r\n  tick = () => {\r\n    if (this.state.counter > 1) {\r\n      this.setState({\r\n        counter: this.state.counter - 1\r\n      })\r\n    } else  {\r\n      this.setState({\r\n        counter: this.state.counter - 1\r\n      });\r\n      this.props.passedFunction();\r\n      clearInterval(this.state.timer);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let timer = setInterval(this.tick, 1000);\r\n    this.setState({ timer });\r\n  }\r\n  componentWillUnmount() {\r\n    //this.props.setTime(this.state.counter); - не нужно в рамках обратного отчета\r\n    clearInterval(this.state.timer);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='timer'>\r\n        {this.state.counter} сек.\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  //setTime\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(TimerReverse);","import React, {Component} from 'react';\r\nimport {Numbers} from \"../Numbers\";\r\nimport TimerReverse from \"../../TimerReverse\";\r\nimport {lineLength} from '../../Count'\r\nimport {Button} from \"../../../Button\";\r\n\r\nexport class Rows extends Component {\r\n  state = {\r\n    [this.props.row]: [],\r\n  };\r\n\r\n  rowAnswer = (ans) => {\r\n    this.setState(state => ({...state, [this.props.row]: state[this.props.row].concat(ans)}))\r\n  };\r\n\r\n  submitRow = () => {\r\n    const {startNextRow, row} = this.props;\r\n    this.props.setAnswer(this.state[this.props.row]);\r\n    startNextRow(row + 1);\r\n  };\r\n\r\n  submitLastRow = () => {\r\n    this.submitRow();\r\n    this.props.endTraining();\r\n\r\n  };\r\n\r\n  render() {\r\n    const {row, currentRow, time, rowLength } = this.props;\r\n    return (\r\n      <div className='number-container'>\r\n        {\r\n          Array(lineLength).fill().map((number, j) => (\r\n            <Numbers\r\n              row={row}\r\n              key={j}\r\n              elIndex={j}\r\n              disabled={row !== currentRow}\r\n              lineLength={lineLength}\r\n              setAnswer={this.rowAnswer}\r\n            />\r\n          ))\r\n        }\r\n        {rowLength === row ? <Button onClick={this.submitLastRow} text='Завершить строку' nameOfClass='next'/> :\r\n          <Button  nameOfClass='next' onClick={this.submitRow} text='Следующая строка' />}\r\n        <div className='timer-container'>\r\n          {row === currentRow &&\r\n          <TimerReverse maxTime={time} passedFunction={rowLength === row ? this.submitLastRow : this.submitRow}/>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport flattenDeep from 'lodash-es/flattenDeep';\r\nimport {createProject} from '../../../actions/projectActions';\r\nimport {submitCount, submitResult} from '../../../actions/generalHelpers';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Information from '../Shulte/Information';\r\nimport {Rows} from './Rows';\r\nimport {Button} from \"../../Button\";\r\nimport './styles.css';\r\n\r\nexport const lineLength = 20; //23;\r\nconst numberOfRows = 8; //10 - always even number\r\n\r\nclass Count extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n    result: {},\r\n    currentRow: 0,\r\n    answer: {},\r\n    arrayAnswer: [],\r\n    finalScore: 0,\r\n  };\r\n\r\n  setAnswer = (ans) => {\r\n    this.setState(({answer: {...this.state.answer, [this.state.currentRow]: ans}}));\r\n    this.setState(({arrayAnswer: [...this.state.arrayAnswer, ans]}))\r\n  };\r\n\r\n  rowLength = Array(numberOfRows).fill('');\r\n\r\n  startNextRow = (i) => {\r\n    this.setState({currentRow: i});\r\n  };\r\n\r\n  endTraining = () => {\r\n    this.setState({endTraining: true});\r\n  };\r\n\r\n\r\n  setNext = () => {\r\n    const firstArray = flattenDeep(this.state.arrayAnswer.slice(0, numberOfRows/2));\r\n    const secondArray = flattenDeep(this.state.arrayAnswer.slice(numberOfRows/2, numberOfRows));\r\n    console.log(firstArray, secondArray);\r\n    const firstResult = firstArray.reduce((a, b = {}) => { console.log(a, b);   return a + b.res}, 0);\r\n    const secondResult = secondArray.reduce((a, b = {}) => a + b.res, 0);\r\n    // Если значение коэффициента работоспособности приближается к 1,\r\n    // то это означает, что утомления практически не происходит.\r\n    // Если коэффициент больше 1, то это свидетельствует о медленной врабатываемости испытуемого.\r\n    // Коэффициент работоспособности, стремящийся к нулю, связан с истощаемостью внимания и снижением работоспособности.\r\n    const finalResult = firstResult > 0 ? secondResult/firstResult : 0;\r\n    this.props.submitResult(this.state.answer);\r\n    this.props.submitFinal ({finalScore: finalResult, name: 'count'});\r\n    this.props.history.push('/test/memory-words');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка различных аспектов внимания</p>\r\n        <p className='container'>Вам будет дано {numberOfRows} радов чилел. Нужно складывать или вычитать числа и записывать в поле ввода\r\n          (для отрицательных чисел не обязательно ставить знак минуса). На подсчет каждого ряда дается 30 секунд.\r\n          По истечении этого времени ряд будет блокироваться.</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Складывайте или вычитайте числа. Запишите модуль числа.'}</span>\r\n          <Button text='Начать' onClick={() =>\r\n            this.setState({startTraining: true})}/>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n          <Information\r\n            error={this.state.error}\r\n            end={this.state.endTraining}\r\n            errors={this.state.errorCounter}\r\n            errorMessage={'Неверное число!'}\r\n            instructionNote={'Складывайте или вычитайче числа. Запишите модуль числа.'}\r\n          />\r\n\r\n          {\r\n            this.rowLength.map((item, i) =>\r\n              <Rows\r\n                rowLength={this.rowLength.length - 1}\r\n                key={i}\r\n                row={i}\r\n                currentRow={this.state.currentRow}\r\n                time={30}\r\n                setAnswer={this.setAnswer}\r\n                startNextRow={this.startNextRow}\r\n                endTraining={this.endTraining}\r\n              />\r\n            )\r\n          }\r\n\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining && <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitCount(result)),\r\n    submitFinal: (result) => dispatch(submitResult(result)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Count)\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../../actions/projectActions'\r\nimport {submitMemoryWords, submitResult} from '../../../actions/generalHelpers'\r\nimport {Redirect} from 'react-router-dom'\r\nimport './styles.css';\r\nimport TimerReverse from \"../TimerReverse\";\r\nimport {Button} from \"../../Button\";\r\n\r\nconst maxTime = 30;\r\n//(new Set(array)).size !== array.length;  to check for duplicates\r\nconst wordsRaw = ['Лес', 'Хлеб', 'Окно', 'Стул', 'Вода', 'Конь', 'Гриб', 'Игла', 'Мед', 'Огонь',\r\n  'Число', 'Хор', 'Камень', 'Кино', 'Зонт', 'Море', 'Шмель', 'Лампа', 'Рысь',\r\n  'Кот', 'Ель', 'Дом', 'Зима', 'Мост', 'Брат', 'Очки'];\r\n\r\nconst words = wordsRaw.sort(() => Math.random() - 0.5).slice(0, 10);\r\n\r\nclass MemoryWords extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n    showWords: true,\r\n    result: [],\r\n    correct: 0,\r\n  };\r\n\r\n  endMemorizing = () => {\r\n    this.setState({showWords: false})\r\n  };\r\n  checkWords = () => {\r\n    const wordsLower = words.map(word => word.toLowerCase());\r\n    const correct = Object.values(this.state.result).filter(value => wordsLower.includes(value.toLowerCase()));\r\n    this.setState({endTraining: true, correct: correct.length})\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState(({result: {...this.state.result, [e.target.id]: e.target.value}}))\r\n  };\r\n\r\n  setNext = () => {\r\n    this.props.submitResult(this.state.correct);\r\n    this.props.submitFinal({finalScore: this.state.correct, name: 'memoryWords'});\r\n    this.props.history.push('/test/current-summary');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка памяти</p>\r\n        {!this.state.startTraining &&\r\n        <>\r\n          <div className='message'>\r\n            <span className='start-message'>{'Запомните следующие слова'}</span>\r\n            <button className='start-btn' onClick={() =>\r\n              this.setState({startTraining: true})}>\r\n              Начать\r\n            </button>\r\n          </div>\r\n          <p>На запоминание всех слов будет дано {maxTime} секунд.</p>\r\n        </>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n\r\n          {this.state.showWords && <TimerReverse maxTime={maxTime} passedFunction={this.endMemorizing}/>}\r\n\r\n          {this.state.showWords && <div className='words'>{words.join(', ')}</div>}\r\n          {!this.state.showWords && <div>\r\n            {words.map((word, i) => <div key={i} className='input-wrapper'><input placeholder={'Введите слово'}\r\n                                                                                  onChange={this.handleChange}\r\n                                                                                  autoComplete=\"off\"\r\n                                                                                  id={i}/></div>)}\r\n            <Button onClick={this.checkWords} text='Проверить' nameOfClass='next'/>\r\n          </div>}\r\n\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining &&\r\n        //two buttons did better job, one button is next and the final button is submit\r\n        <>\r\n          <div>Воспроизведено слов правильно: {this.state.correct}</div>\r\n          <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>\r\n        </>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitMemoryWords(result)),\r\n    submitFinal: (result) => dispatch(submitResult(result)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MemoryWords)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../actions/authActions'\r\nimport './styles.css'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <div>\r\n            <ul className={props.className}>\r\n                <li><div onClick={props.signOut} className={props.className} >Выход</div></li>\r\n                <li><NavLink to='/profile' className={props.className}>Профиль: {props.profile.firstName}</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks) // null replaced mapstatetoprops","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './styles.css'\r\n\r\nconst SignedOutLinks = (props) => {\r\n    return (\r\n        <div>\r\n            <ul className=\"nav-right\">\r\n                <li><NavLink to='/signup' className={props.className}>Регистрация</NavLink></li>\r\n                <li><NavLink to='/signin' className={props.className}>Вход</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {makeStyles, AppBar, Toolbar, Typography} from \"@material-ui/core\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./styles.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    navBar: {\r\n        backgroundColor: '#d8f0de',\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: \"black\",\r\n    }\r\n}));\r\n\r\nconst Navbar = props => {\r\n    const classes = useStyles();\r\n    const {auth, profile} = props;\r\n    const links = auth.uid ? (\r\n        <SignedInLinks profile={profile} className={classes.link}/>\r\n    ) : (\r\n        <SignedOutLinks className={classes.link}/>\r\n    );\r\n    return (\r\n        <AppBar position=\"static\" className={classes.navBar}>\r\n            <Toolbar className=\"container inner-wrapper\">\r\n                <Typography variant=\"h6\">\r\n                    <Link to=\"/\" className={classes.link}>Главная</Link>\r\n                </Typography>\r\n\r\n                {links}\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\n\r\nexport const SummaryBlock = ({count = 0, memoryWords = 0 , perception = 0 , shulte = 0, shulteRed = 0}) => {\r\n  return (<div>\r\n    <div>\r\n      Таблицы шульте: {shulte}\r\n    </div>\r\n    <div>\r\n      Чернокрасные таблицы Шульте: {shulteRed}\r\n    </div>\r\n    <div>\r\n      Корректурная проба: {perception}\r\n    </div>\r\n    <div>\r\n      Счет: {count}\r\n    </div>\r\n    <div>\r\n      Запоминание слов: {memoryWords}\r\n    </div>\r\n  </div>);\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport get from 'lodash-es/get';\r\nimport {createProject} from \"../../actions/projectActions\";\r\nimport {Button} from \"../Button\";\r\nimport {SummaryBlock} from '../SummaryBlock';\r\nimport './styles.css';\r\n\r\nclass CurrentSummary extends Component {\r\n  state = {\r\n    showSummary: false,\r\n  };\r\n  showResults = () => {\r\n    this.props.createProject(this.props.project);\r\n    this.setState({showSummary: true});\r\n  };\r\n\r\n  render() {\r\n    const {auth, project} = this.props;\r\n    const {count, memoryWords, perception, shulte, shulteRed} = get(project, 'generalResult', {});\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return <div className='summary-container'>\r\n      <div className='summary-button'>\r\n        {!this.state.showSummary && <Button onClick={this.showResults} text='Посмотреть результаты'/>}\r\n      </div>\r\n      {this.state.showSummary &&\r\n      <div>\r\n        <h3>Ваши результаты:</h3>\r\n        <br/>\r\n        <SummaryBlock\r\n        count={count}\r\n        memoryWords={memoryWords}\r\n        perception={perception}\r\n        shulte={shulte}\r\n        shulteRed={shulteRed}\r\n      />\r\n      <br/>\r\n      <br/>\r\n      <p>График по всем результатам можно посмотреть в личном кабинете в профиле.</p>\r\n      </div>\r\n      }\r\n    </div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentSummary)","import React, { Component } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Signin from './components/auth/SignIn';\r\nimport Signup from './components/auth/SignUp';\r\nimport Test from './components/Test';\r\nimport {Summary} from './components/Summary';\r\nimport Train from './components/Train';\r\nimport Sample from './components/Sample';\r\nimport Shulte from './components/Sample/Shulte';\r\nimport ShulteRed from './components/Sample/ShulteRed';\r\nimport Perception from './components/Sample/Perception';\r\nimport Count from './components/Sample/Count';\r\nimport MemoryWords from './components/Sample/MemoryWords';\r\nimport Navbar from './components/Navbar';\r\nimport CurrentSummary from './components/CurrentSummary';\r\nimport './styles.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route exact path='/signin' component={Signin} />\r\n          <Route exact path='/signup' component={Signup} />\r\n          <Route exact path='/test' component={Test} />\r\n          <Route exact path='/train' component={Train} />\r\n          <Route exact path='/profile' component={Summary} />\r\n          <Route exact path='/summary' component={Summary} />\r\n          <Route exact path='/test/sample' component={Sample} />\r\n          <Route exact path='/test/shulte' component={Shulte} />\r\n          <Route exact path='/test/shulte-red' component={ShulteRed} />\r\n          <Route exact path='/test/perception' component={Perception} />\r\n          <Route exact path='/test/count' component={Count} />\r\n          <Route exact path='/test/memory-words' component={MemoryWords} />\r\n          <Route exact path='/test/current-summary' component={CurrentSummary} />\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from 'redux-thunk';\r\nimport {reduxFirestore, getFirestore} from 'redux-firestore';\r\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase';\r\nimport fbConfig from './config/fbConfig';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {persistStore} from 'redux-persist';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\r\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}), // redux binding for firebase\r\n    reduxFirestore(fbConfig) // redux bindings for firestore\r\n  )\r\n);\r\n\r\nconst rehydrate = () => persistStore(store);\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n  rehydrate(\r\n    ReactDOM.render(\r\n      <Provider store={store}>\r\n        <HashRouter basename='/'>\r\n          <App/>\r\n        </HashRouter>\r\n      </Provider>,\r\n      document.getElementById('root')))\r\n});\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}