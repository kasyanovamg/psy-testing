{"version":3,"sources":["config/fbConfig.js","reducers/authReducer.js","reducers/projectReducer.js","reducers/testReducers.js","actions/testHelpers.js","reducers/generalReducers.js","actions/generalHelpers.js","reducers/rootReducer.js","components/Home/index.js","components/auth/SignIn/index.js","actions/authActions.js","components/auth/SignUp/index.js","components/Test/index.js","components/Summary/index.js","actions/projectActions.js","components/Sample/index.js","components/Train/index.js","components/Sample/Shulte/Information/index.js","components/Sample/Timer/index.js","components/Button/index.js","components/Sample/Shulte/index.js","components/Sample/ShulteRed/index.js","components/Sample/Perception/index.js","components/Sample/Count/Numbers/index.js","components/Sample/TimerReverse/index.js","components/Sample/Count/Rows/index.js","components/Sample/Count/index.js","components/Sample/MemoryWords/index.js","components/Navbar/SignedInLinks.js","components/Navbar/SignedOutLinks.js","components/Navbar/index.js","components/CurrentSummary/index.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","initState","authError","authReducer","state","arguments","length","undefined","action","type","console","log","Object","objectSpread","err","message","projectReducer","combineReducers","setTime","payload","currentTime","persistCombineReducers","key","storage","storageSession","perceptionResult","time","result","errors","shulteResult","shulteRedResult","countResult","memoryWordsResult","memoryImagesResult","rootReducer","auth","project","firestoreReducer","firebaseReducer","current","testReducers","generalReducers","Home","props","react_default","a","createElement","className","Link","to","useStyles","makeStyles","theme","container","width","padding","margin","boxShadow","form","flexDirection","display","formItem","marginBottom","connect","dispatch","signIn","creds","credentials","getState","_ref","getFirebase","signInWithEmailAndPassword","email","password","then","catch","_useState","useState","_useState2","slicedToArray","formValues","setFormValues","handleChange","e","defineProperty","target","id","value","classes","uid","Redirect","Card","onSubmit","preventDefault","Typography","variant","TextField","name","placeholder","label","required","onChange","Grid","Button_Button","color","style","marginRight","backgroundColor","radio","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","firstName","lastName","initials","group","RadioGroup","isExperimentalGroup","defaultValue","FormControlLabel","control","Radio","compose","projects","ordered","firestoreConnect","filter","authorId","map","authorFirstName","authorLastName","createdAt","toDate","toString","createProject","profile","add","Date","CreateProject","title","content","_this","setState","handleSubmit","history","push","this","htmlFor","Component","Sample","Information","prevProps","_this$props","end","error","errorMessage","instructionNote","Timer","timer","counter","tick","setInterval","clearInterval","actions","Button","_Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","nameOfClass","inherits","createClass","text","onClick","Shulte","errorCounter","startTraining","endTraining","tableLength","numbers","fill","i","sort","Math","random","userNumbers","cellVerify","cell","slice","setNext","submitResult","_this2","Fragment","Shulte_Information","Sample_Timer","components_Button_Button","submitShulte","ShulteRed","countBackwards","redLength","blackLength","red","black","userRed","userBlack","parseInt","submitShulteRed","Perception","letter","searchedLetter","gridLength","letters","newLetters","longLetters","guessedCells","index","includes","innerText","getTime","submitPerseption","Numbers","firstNumber","floor","secondNumber","sign","round","checkResult","first","second","setAnswer","elIndex","res","disabled","onBlur","TimerReverse","maxTime","passedFunction","Rows","row","rowAnswer","ans","submitRow","startNextRow","submitLastRow","_this$props2","currentRow","rowLength","lineLength","number","j","Numbers_Numbers","Sample_TimerReverse","numberOfRows","Count","answer","item","Rows_Rows","submitCount","words","MemoryWords","showWords","correct","endMemorizing","checkWords","wordsLower","word","toLowerCase","values","join","autoComplete","submitMemoryWords","signOut","_ref2","NavLink","SignedOutLinks","navBar","link","textDecoration","links","Navbar_SignedInLinks","Navbar_SignedOutLinks","AppBar","position","Toolbar","CurrentSummary","showSummary","showResults","App","components_Navbar","Switch","Route","exact","path","component","Signin","Signup","Test","Train","Summary","Boolean","window","location","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","BrowserRouter","src_App","document","getElementById","persistStore","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b8983bf.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth'\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyCZnBjFCvxM90C-WIcjuVwzUPAgr2782QA\",\r\n    authDomain: \"psy-testing.firebaseapp.com\",\r\n    databaseURL: \"https://psy-testing.firebaseio.com\",\r\n    projectId: \"psy-testing\",\r\n    storageBucket: \"psy-testing.appspot.com\",\r\n    messagingSenderId: \"209166839391\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nfirebase.firestore();\r\n\r\nexport default firebase ","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default authReducer;","export const initState = {}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  console.log(\"State in project reducer\", action, state)\r\n\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT_SUCCESS':\r\n      console.log('create project success');\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error');\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;","import { combineReducers } from \"redux\";\r\nimport { SET_TIME } from '../actions/testHelpers';\r\n\r\nexport const setTime = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case SET_TIME:\r\n            return action.payload.currentTime;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default combineReducers({\r\n    setTime\r\n})\r\n","export const SET_TIME = \"current/SET_TIME\";\r\n\r\nexport const setTime = (currentTime = \"\") => ({\r\n    type: SET_TIME,\r\n    payload: { currentTime }\r\n});","import {persistCombineReducers} from 'redux-persist';\r\nimport storageSession from 'redux-persist/lib/storage/session';\r\nimport {\r\n  SUBMIT_COUNT, SUBMIT_MEMORY_IMAGES,\r\n  SUBMIT_MEMORY_WORDS,\r\n  SUBMIT_PERCEPTION,\r\n  SUBMIT_SHULTE,\r\n  SUBMIT_SHULTE_RED\r\n} from '../actions/generalHelpers';\r\n\r\nexport const perceptionResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_PERCEPTION:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const shulteResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_SHULTE:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const shulteRedResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_SHULTE_RED:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const countResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_COUNT:\r\n      return {\r\n        ...state,\r\n        result: action.payload.result,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const memoryWordsResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_MEMORY_WORDS:\r\n      return {\r\n        ...state,\r\n        result: action.payload.result,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const memoryImagesResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_MEMORY_IMAGES:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default persistCombineReducers(\r\n  {\r\n    key: 'psyTesting',\r\n    storage: storageSession,\r\n  },\r\n  {\r\n    perceptionResult,\r\n    shulteResult,\r\n    shulteRedResult,\r\n    countResult,\r\n    memoryWordsResult,\r\n    memoryImagesResult,\r\n  })\r\n","export const SUBMIT_PERCEPTION = \"general/SUBMIT_PERCEPTION\";\r\nexport const SUBMIT_SHULTE = \"general/SUBMIT_SHULTE\";\r\nexport const SUBMIT_SHULTE_RED = \"general/SUBMIT_SHULTE_RED\";\r\nexport const SUBMIT_COUNT = \"general/SUBMIT_COUNT\";\r\nexport const SUBMIT_MEMORY_WORDS = \"general/SUBMIT_MEMORY_WORDS\";\r\nexport const SUBMIT_MEMORY_IMAGES = \"general/SUBMIT_MEMORY_IMAGES\";\r\n\r\nexport const submitPerseption = (result = {}) => ({\r\n  type: SUBMIT_PERCEPTION,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitShulte = (result = {}) => ({\r\n  type: SUBMIT_SHULTE,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitShulteRed = (result = {}) => ({\r\n  type: SUBMIT_SHULTE_RED,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitCount = (result = {}) => ({\r\n  type: SUBMIT_COUNT,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitMemoryWords = (result = {}) => ({\r\n  type: SUBMIT_MEMORY_WORDS,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitMemoryImages = (result = {}) => ({\r\n  type: SUBMIT_MEMORY_IMAGES,\r\n  payload: {result}\r\n});","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport testReducers from './testReducers';\r\nimport generalReducers from './generalReducers';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n    current: testReducers,\r\n    result: generalReducers\r\n});\r\n\r\nexport default rootReducer","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './styles.css'\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <div className=\"container home-container\">\r\n            {/*<div className=\"home-item\"><Link to=\"/test\" >Начать тренировку</Link></div>*/}\r\n            {/*<div className=\"home-item\"><Link to=\"/train\" >Train</Link></div>*/}\r\n            <div className=\"home-item\"><Link to='/test/shulte'>Начать</Link></div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Home","import React, { useState } from \"react\";\r\nimport { TextField, makeStyles, Button, Card, Grid, Typography } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signIn } from \"../../../actions/authActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    width: 600,\r\n    padding: 15,\r\n    margin: \"300px auto\",\r\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\"\r\n  },\r\n  form: {\r\n    flexDirection: \"column\",\r\n    display: \"flex\"\r\n  },\r\n  formItem: {\r\n    marginBottom: 15\r\n  }\r\n}));\r\n\r\nconst SignIn = (props) => {\r\n  const [formValues, setFormValues] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.signIn(formValues);\r\n  };\r\n  const classes = useStyles();\r\n  const { authError, auth } = props;\r\n  if (auth.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Card className={classes.container}>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h5\" className=\"grey-text text-darken-3\">Войти</Typography>\r\n        <TextField\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Введите email\"\r\n          label=\"Email адрес\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.email}\r\n          className={classes.formItem}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Введите пароль\"\r\n          label=\"Пароль\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.password}\r\n          className={classes.formItem}\r\n        />\r\n        <Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ marginRight: 20,  backgroundColor: '#d8f0de', color: 'black' }}\r\n          >\r\n            Войти\r\n          </Button>\r\n          {authError && <p>{authError}</p>}\r\n        </Grid>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({type: 'LOGIN_SUCCESS'});\r\n    }).catch((err) => {\r\n      dispatch({type: 'LOGIN_ERROR', err});\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({type: 'SIGNOUT_SUCCESS'})\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then(resp => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0],\r\n        group: newUser.group,\r\n      });\r\n    }).then(() => {\r\n      dispatch({type: 'SIGNUP_SUCCESS'});\r\n    }).catch((err) => {\r\n      dispatch({type: 'SIGNUP_ERROR', err});\r\n    });\r\n  }\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  makeStyles,\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  Typography,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio\r\n} from \"@material-ui/core\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../../actions/authActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    width: 600,\r\n    padding: 15,\r\n    margin: \"200px auto\",\r\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\"\r\n  },\r\n  form: {\r\n    flexDirection: \"column\",\r\n    display: \"flex\"\r\n  },\r\n  formItem: {\r\n    marginBottom: 15\r\n  },\r\n  radio: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n  }\r\n}));\r\n\r\nconst Signup = props => {\r\n  const [formValues, setFormValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    group: \"experimental\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const setGroup = e => {\r\n    setFormValues({\r\n      ...formValues,\r\n      group: e.target.value\r\n    });\r\n    console.log(formValues)\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.signUp(formValues);\r\n  };\r\n  const classes = useStyles();\r\n  const { authError, auth } = props;\r\n  if (auth.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Card className={classes.container}>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h5\" className=\"grey-text text-darken-3\">\r\n          Зарегистрироваться\r\n        </Typography>\r\n        <TextField\r\n          id=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Введите email\"\r\n          label=\"Email адрес\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.email}\r\n          className={classes.formItem}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Введите пароль\"\r\n          label=\"Пароль\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.password}\r\n          className={classes.formItem}\r\n        />\r\n        <TextField\r\n          id=\"firstName\"\r\n          type=\"text\"\r\n          placeholder=\"Введите имя\"\r\n          label=\"Имя\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.firstName}\r\n          className={classes.formItem}\r\n        />\r\n        <TextField\r\n          id=\"lastName\"\r\n          type=\"text\"\r\n          placeholder=\"Введите фамилию\"\r\n          label=\"Фамилия\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.lastName}\r\n          className={classes.formItem}\r\n        />\r\n        <Typography variant=\"h6\">Группа</Typography>\r\n        <RadioGroup\r\n          name=\"group\"\r\n          value={formValues.isExperimentalGroup}\r\n          onChange={setGroup}\r\n          className={classes.radio}\r\n          defaultValue={formValues.group}\r\n        >\r\n          <FormControlLabel\r\n            id=\"isExperimentalGroup\"\r\n            value=\"experimental\"\r\n            control={<Radio />}\r\n            label=\"Экспериментальная\"\r\n          />\r\n          <FormControlLabel\r\n            id=\"isExperimentalGroup\"\r\n            value=\"control\"\r\n            control={<Radio />}\r\n            label=\"Контрольная\"\r\n          />\r\n        </RadioGroup>\r\n        <Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ marginRight: 20,  backgroundColor: '#d8f0de', color: 'black' }}\r\n          >\r\n            Зарегистрироваться\r\n          </Button>\r\n          {authError && <p>{authError}</p>}\r\n        </Grid>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: creds => dispatch(signUp(creds))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Signup);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\n//import { firestoreConnect } from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport './styles.css'\r\n\r\nconst Test = (props) => {\r\n  const {auth} = props;\r\n  if (!auth.uid) return <Redirect to='/signin'/>;\r\n  return (\r\n    <div className=\"container\">\r\n      {/* <Link to='/test/sample'>Sample</Link>  */}\r\n      <div className=\"test-home\">\r\n        <Link to='/test/shulte'>Начать тест Шульте</Link>\r\n        <br/>\r\n        <Link to='/test/shulte-red'>Начать тест Шульте в модификации Горбова</Link>\r\n        <br/>\r\n        <Link to='/test/perception'>Начать методику корректурные пробы</Link>\r\n        <br/>\r\n        <Link to='/test/count'>Начать методику счет по Крепелину</Link>\r\n        <br/>\r\n        <Link to='/test/memory-words'>Начать методику \"Запоминание слов\"</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps)\r\n)(Test)","import React from 'react'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Summary = ({ projects, auth }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary container\">\r\n      {projects && projects.length && projects.filter(project => project.authorId === auth.uid).map(project =>\r\n        <div className=\"card-content grey-text text-darken-3\" key={project.id}>\r\n          <p>Имя: {project.authorFirstName} {project.authorLastName}</p>\r\n          <p className=\"grey-text\">{project.createdAt && project.createdAt.toDate().toString()}</p>\r\n          {project.shulteResult &&\r\n            <div>\r\n              <h4>Результат методики \"Таблицы шульте\"</h4>\r\n              <div>Время: {project.shulteResult && project.shulteResult.time}</div>\r\n              <div>Ошибки: {project.shulteResult && project.shulteResult.errors}</div>\r\n            </div>\r\n          }\r\n      <hr />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' }\r\n  ])\r\n)(Summary)","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n    }).catch(err => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n//import { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Sample from '../Sample';\r\n\r\nconst Train = (props) => {\r\n  const { auth } = props;\r\n  if (!auth.uid) return <Redirect to='/signin' />\r\n  return (\r\n    <div>\r\n      Train\r\n      <Sample history={props.history} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps)\r\n)(Train)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Information extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    return prevProps.time !== this.props.time || prevProps.errors !== this.props.errors;\r\n  }\r\n  render() {\r\n    const {end, errors, error, errorMessage, instructionNote, time} = this.props;\r\n    return (\r\n      <div className='info'>\r\n        {\r\n          end ? <p>Тестирование завершено! Ваше время: {time} сек. Количество ошибок: {errors}.</p> :\r\n            error ? <p className='info__error'>{errorMessage}</p> :\r\n              <p>{instructionNote}</p>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    time: state.current.setTime\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Information)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {setTime} from '../../../actions/testHelpers';\r\n\r\nclass Timer extends Component {\r\n  state = {\r\n    timer: null,\r\n    counter: 0\r\n  };\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      counter: this.state.counter + 1\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let timer = setInterval(this.tick, 1000);\r\n    this.setState({ timer });\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.setTime(this.state.counter);\r\n    clearInterval(this.state.timer);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='timer'>\r\n        {this.state.counter} сек.\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  setTime\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(Timer);","import React, {Component} from 'react';\r\nimport './styles.css'\r\n\r\nexport class Button extends Component {\r\n  nameOfClass = () => {\r\n    switch (this.props.nameOfClass) {\r\n      case 'next':\r\n        return 'button-next';\r\n      default:\r\n        return 'button-main';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {text, onClick} = this.props;\r\n    return (\r\n      <button className={this.nameOfClass()} onClick={onClick}>{text}</button>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../../actions/projectActions'\r\nimport {submitShulte} from '../../../actions/generalHelpers'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Information from './Information'\r\nimport Timer from '../Timer'\r\nimport {Button} from \"../../Button\";\r\nimport './styles.css';\r\n\r\nclass Shulte extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n  };\r\n\r\n  tableLength = 25; //25\r\n  numbers = Array(this.tableLength).fill().map((e, i) => i + 1).sort(() => Math.random() - 0.5);\r\n  userNumbers = [0];\r\n  cellVerify = (cell) => {\r\n    this.setState({error: false});\r\n    if (this.userNumbers.slice(-1)[0] + 1 === cell) {\r\n      this.userNumbers.push(cell);\r\n      if (this.userNumbers.slice(-1)[0] === this.tableLength) {\r\n        this.setState({endTraining: true})\r\n      }\r\n    } else {\r\n      this.setState({error: true});\r\n      if (this.userNumbers.length <= this.tableLength && cell !== 25) {\r\n        let error = this.state.errorCounter + 1;\r\n        this.setState({errorCounter: error})\r\n      }\r\n    }\r\n  };\r\n\r\n  setNext = () => {\r\n    this.props.submitResult({time: this.props.time, errors: this.state.errorCounter});\r\n    this.props.history.push('/test/shulte-red');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка различных аспектов внимания</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Начните поиск цифр от 1 до 25'}</span>\r\n          <button className='start-btn' onClick={() =>\r\n            this.setState({startTraining: true})}>\r\n            Начать\r\n          </button>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n          <Information\r\n            error={this.state.error}\r\n            end={this.state.endTraining}\r\n            errors={this.state.errorCounter}\r\n            errorMessage={'Неверное число!'}\r\n            instructionNote={'Найдите числа!'}\r\n          />\r\n\r\n          <div className='table'>\r\n            {\r\n              this.numbers.map((e) =>\r\n                <div key={e} onClick={() => this.cellVerify(e)} className='cell'>{e}</div>)\r\n            }\r\n          </div>\r\n          {!this.state.endTraining && <Timer/>}\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining &&\r\n         // <button className='next' onClick={() =>\r\n        //  this.props.submitResult({time: this.props.time, errors: this.state.errorCounter})}>Submit\r\n        //  </button>\r\n         // <button className='next' onClick={() =>\r\n        //  this.props.createProject(this.props.project)\r\n      // }>Submit Final\r\n      //    </button>\r\n\r\n        <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitShulte(result))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shulte)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../../actions/projectActions'\r\nimport {submitShulteRed} from '../../../actions/generalHelpers'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Information from '../Shulte/Information'\r\nimport Timer from '../Timer'\r\nimport './styles.css';\r\nimport {Button} from \"../../Button\";\r\n\r\nclass ShulteRed extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n    countBackwards: false,\r\n  };\r\n\r\n  redLength = 24; //24\r\n  blackLength = 25; //25\r\n  red = Array(this.redLength).fill().map((e, i) => i + 1 + 'r');\r\n  black = Array(this.blackLength).fill().map((e, i) => i + 1 + 'b');\r\n  numbers = this.red.concat(this.black).sort(() => Math.random() - 0.5);\r\n  userRed = [`${this.redLength + 1}r`];\r\n  userBlack = ['0b'];\r\n  cellVerify = (cell) => {\r\n    console.log(cell, this.userRed, this.userBlack);\r\n    this.setState({error: false});\r\n    if (this.state.countBackwards) {\r\n      if (parseInt(this.userRed.slice(-1)[0]) - 1 + \"r\" === cell) {\r\n        this.userRed.push(cell);\r\n        this.setState({countBackwards: false});\r\n      } else {\r\n        this.setState({error: true});\r\n        if (this.userRed.length <= this.redLength && cell !== 24) {\r\n          let error = this.state.errorCounter + 1;\r\n          this.setState({errorCounter: error})\r\n        }\r\n      }\r\n    } else if (!this.state.countBackwards) {\r\n      if (parseInt(this.userBlack.slice(-1)[0]) + 1 + \"b\" === cell) {\r\n        this.userBlack.push(cell);\r\n        this.setState({countBackwards: true});\r\n        if (parseInt(this.userBlack.slice(-1)[0]) === this.blackLength) {\r\n          this.setState({endTraining: true})\r\n        }\r\n      } else {\r\n        this.setState({error: true});\r\n        if (this.userBlack.length <= this.blackLength && cell !== 25) {\r\n          let error = this.state.errorCounter + 1;\r\n          this.setState({errorCounter: error})\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  setNext = () => {\r\n    this.props.submitResult({time: this.props.time, errors: this.state.errorCounter});\r\n    this.props.history.push('/test/perception');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка различных аспектов внимания</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Начните поиск цифр: 1 черный - 24 красный; 2 черный - 23 красный... '}</span>\r\n          <button className='start-btn' onClick={() =>\r\n            this.setState({startTraining: true})}>\r\n            Начать\r\n          </button>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n          <Information\r\n            error={this.state.error}\r\n            end={this.state.endTraining}\r\n            errors={this.state.errorCounter}\r\n            errorMessage={'Неверное число!'}\r\n            instructionNote={'Найдите числа: 1 черный - 24 красный; 2 черный - 23 красный...'}\r\n          />\r\n\r\n          <div className='table-wide'>\r\n            {\r\n              this.numbers.map((e) =>\r\n                <div className={e.slice(-1) === 'r' ? 'red cell-wide' : 'cell-wide'}\r\n                     key={e} onClick={() => this.cellVerify(e)}>{parseInt(e)}</div>)\r\n            }\r\n          </div>\r\n          {!this.state.endTraining && <Timer/>}\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining &&\r\n        <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitShulteRed(result))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShulteRed)","import React, {Component} from 'react';\r\nimport Timer from '../Timer';\r\nimport Information from '../Shulte/Information';\r\nimport {createProject} from \"../../../actions/projectActions\";\r\nimport {submitPerseption} from \"../../../actions/generalHelpers\";\r\nimport {connect} from \"react-redux\";\r\nimport './styles.css';\r\nimport {Button} from \"../../Button\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Perception extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false\r\n  };\r\n  letter = 'н';\r\n  searchedLetter = 'п';\r\n  gridLength = 252;  //252\r\n  letters = Array(this.gridLength).fill(this.letter);\r\n  newLetters = Array(4).fill(this.searchedLetter);\r\n  longLetters = this.letters.concat(this.newLetters).sort(() => Math.random() - 0.5);\r\n\r\n  guessedCells = [];\r\n  cellVerify = (cell, index) => {\r\n    this.setState({error: false});\r\n    if (cell === this.searchedLetter && !this.guessedCells.includes(index) && this.guessedCells.length <= this.newLetters.length) {\r\n      this.guessedCells.push(index);\r\n      if (this.newLetters.length === this.guessedCells.length) {\r\n        this.setState({endTraining: true});\r\n      }\r\n    } else {\r\n      this.setState({error: true, errorCounter: this.state.errorCounter + 1});\r\n    }\r\n\r\n  };\r\n\r\n  setNext = () => {\r\n    this.props.submitResult({time: this.props.time, errors: this.state.errorCounter});\r\n    this.props.history.push('/test/count');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <>\r\n        <div className='contents'>\r\n          <p>Корректурная проба</p>\r\n          {!this.state.startTraining &&\r\n          <div className='message'>\r\n            <span className='start-message'>{`Найдите все буквы \"${this.searchedLetter}\"`}</span>\r\n            <button className='start-btn' onClick={() => this.setState({startTraining: true})}>Начать</button>\r\n          </div>\r\n          }\r\n          {this.state.startTraining &&\r\n          <React.Fragment>\r\n            <Information error={this.state.error} end={this.state.endTraining}\r\n                         errors={this.state.errorCounter}\r\n                         errorMessage={'Неверная буква!'}\r\n                         instructionNote={`Найдите все буквы \"${this.searchedLetter}\"`}\r\n            />\r\n            <div className='grid'>\r\n              {\r\n                this.longLetters.map((e, i) =>\r\n                  <div\r\n                    key={i}\r\n                    onClick={(e) => this.cellVerify(e.target.innerText, i)}\r\n                    className='letter'>{e}\r\n                  </div>)\r\n              }\r\n            </div>\r\n            {!this.state.endTraining && <Timer getTime={this.props.time}/>}\r\n          </React.Fragment>\r\n          }\r\n        </div>\r\n        {this.state.endTraining && <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitPerseption(result))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Perception)","import React, {Component} from \"react\";\r\n\r\nexport class Numbers extends Component {\r\n  state = {\r\n    value: null,\r\n  };\r\n  firstNumber = Math.floor(Math.random() * (10 - 1)) + 1;\r\n  secondNumber = Math.floor(Math.random() * (10 - 1)) + 1;\r\n  sign = Math.round(Math.random());\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value\r\n    })\r\n  };\r\n\r\n  checkResult = () => {\r\n    const first = parseInt(this.firstNumber);\r\n    const second = parseInt(this.secondNumber);\r\n    const result = this.sign  ? first + second : first - second;\r\n    //return parseInt(this.state.value) === result ? console.log(\"yes\") : console.log(\"No\")\r\n    this.props.setAnswer({\r\n      index: this.props.elIndex,\r\n      res: parseInt(this.state.value) === result ? 1 : 0})\r\n  };\r\n\r\n  render() {\r\n    const {firstNumber, secondNumber, sign} = this;\r\n    const {disabled} = this.props;\r\n\r\n    return (\r\n      <div className='cell-container'>\r\n        <div>{firstNumber}</div>\r\n        <div> {sign ? \"+\" : \"-\"} </div>\r\n        <div>{secondNumber}</div>\r\n        <input onChange={this.handleChange} disabled={disabled} onBlur={this.checkResult}\r\n        style={{width: '36px'}}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n//import {setTime} from '../../../actions/testHelpers';\r\n\r\nclass TimerReverse extends Component {\r\n  state = {\r\n    timer: null,\r\n    counter: this.props.maxTime\r\n  };\r\n\r\n  tick = () => {\r\n    if (this.state.counter > 1) {\r\n      this.setState({\r\n        counter: this.state.counter - 1\r\n      })\r\n    } else  {\r\n      this.setState({\r\n        counter: this.state.counter - 1\r\n      });\r\n      this.props.passedFunction();\r\n      clearInterval(this.state.timer);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let timer = setInterval(this.tick, 1000);\r\n    this.setState({ timer });\r\n  }\r\n  componentWillUnmount() {\r\n    //this.props.setTime(this.state.counter); - не нужно в рамках обратного отчета\r\n    clearInterval(this.state.timer);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='timer'>\r\n        {this.state.counter} сек.\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  //setTime\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(TimerReverse);","import React, {Component} from 'react';\r\nimport {Numbers} from \"../Numbers\";\r\nimport TimerReverse from \"../../TimerReverse\";\r\nimport {lineLength} from '../../Count'\r\nimport {Button} from \"../../../Button\";\r\n\r\nexport class Rows extends Component {\r\n  state = {\r\n    [this.props.row]: [],\r\n  };\r\n\r\n  rowAnswer = (ans) => {\r\n    this.setState(state => ({...state, [this.props.row]: state[this.props.row].concat(ans)}))\r\n  };\r\n\r\n  submitRow = () => {\r\n    const {startNextRow, row} = this.props;\r\n    this.props.setAnswer(this.state[this.props.row]);\r\n    startNextRow(row + 1);\r\n  };\r\n\r\n  submitLastRow = () => {\r\n    this.submitRow();\r\n    this.props.endTraining();\r\n\r\n  };\r\n\r\n  render() {\r\n    const {row, currentRow, time, rowLength } = this.props;\r\n    return (\r\n      <div className='number-container'>\r\n        {\r\n          Array(lineLength).fill().map((number, j) => (\r\n            <Numbers\r\n              row={row}\r\n              key={j}\r\n              elIndex={j}\r\n              disabled={row !== currentRow}\r\n              lineLength={lineLength}\r\n              setAnswer={this.rowAnswer}\r\n            />\r\n          ))\r\n        }\r\n        {rowLength === row ? <Button onClick={this.submitLastRow} text='Готово' nameOfClass='next'/> :\r\n          <Button  nameOfClass='next' onClick={this.submitRow} text='Следующая строка' />}\r\n        <div className='timer-container'>\r\n          {row === currentRow &&\r\n          <TimerReverse maxTime={time} passedFunction={rowLength === row ? this.submitLastRow : this.submitRow}/>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../../actions/projectActions';\r\nimport {submitCount} from '../../../actions/generalHelpers';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Information from '../Shulte/Information';\r\nimport {Rows} from './Rows';\r\nimport {Button} from \"../../Button\";\r\nimport './styles.css';\r\n\r\nexport const lineLength = 23; //23;\r\nconst numberOfRows = 10; //10\r\n\r\nclass Count extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n    result: {},\r\n    currentRow: 0,\r\n    answer: [],\r\n  };\r\n\r\n  setAnswer = (ans) => {\r\n    console.log(ans);\r\n    this.setState(({answer: {...this.state.answer, [this.state.currentRow]: ans}}))\r\n  };\r\n\r\n  rowLength = Array(numberOfRows).fill('');\r\n\r\n  startNextRow = (i) => {\r\n    this.setState({currentRow: i});\r\n  };\r\n\r\n  endTraining = () => {\r\n    this.setState({endTraining: true});\r\n  };\r\n\r\n  setNext = () => {\r\n    this.props.submitResult(this.state.answer);\r\n    this.props.history.push('/test/memory-words');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка различных аспектов внимания</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Складывайте или вычитайте числа'}</span>\r\n          <Button text='Начать' onClick={() =>\r\n            this.setState({startTraining: true})}/>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n          <Information\r\n            error={this.state.error}\r\n            end={this.state.endTraining}\r\n            errors={this.state.errorCounter}\r\n            errorMessage={'Неверное число!'}\r\n            instructionNote={'Найдите числа!'}\r\n          />\r\n\r\n          {\r\n            this.rowLength.map((item, i) =>\r\n              <Rows\r\n                rowLength={this.rowLength.length - 1}\r\n                key={i}\r\n                row={i}\r\n                currentRow={this.state.currentRow}\r\n                time={30}\r\n                setAnswer={this.setAnswer}\r\n                startNextRow={this.startNextRow}\r\n                endTraining={this.endTraining}\r\n              />\r\n            )\r\n          }\r\n\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining && <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitCount(result))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Count)\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../../actions/projectActions'\r\nimport {submitMemoryWords} from '../../../actions/generalHelpers'\r\nimport {Redirect} from 'react-router-dom'\r\nimport './styles.css';\r\nimport TimerReverse from \"../TimerReverse\";\r\nimport {Button} from \"../../Button\";\r\n\r\nconst words = ['Лес', 'Хлеб', 'Окно', 'Стул', 'Вода', 'Конь', 'Гриб', 'Игла', 'Мед', 'Огонь'].sort(() => Math.random() - 0.5);\r\n\r\nclass MemoryWords extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n    showWords: true,\r\n    result: [],\r\n    correct: 0,\r\n  };\r\n\r\n  endMemorizing = () => {\r\n    this.setState({showWords: false})\r\n  };\r\n  checkWords = () => {\r\n    const wordsLower = words.map(word => word.toLowerCase());\r\n    const correct = Object.values(this.state.result).filter(value => wordsLower.includes(value.toLowerCase()));\r\n    this.setState({endTraining: true, correct: correct.length})\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState(({result: {...this.state.result, [e.target.id]: e.target.value}}))\r\n  };\r\n\r\n  setNext = () => {\r\n    this.props.submitResult(this.state.correct);\r\n    this.props.history.push('/test/current-summary');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка памяти</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Запомните следующие слова'}</span>\r\n          <button className='start-btn' onClick={() =>\r\n            this.setState({startTraining: true})}>\r\n            Начать\r\n          </button>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n\r\n          {this.state.showWords && <TimerReverse maxTime={30} passedFunction={this.endMemorizing}/>}\r\n\r\n          {this.state.showWords && <div className='words'>{words.join(', ')}</div>}\r\n          {!this.state.showWords && <div>\r\n            {words.map((word, i) => <div key={i} className='input-wrapper'><input placeholder={'Введите слово'}\r\n                                                                                  onChange={this.handleChange}\r\n                                                                                  autoComplete=\"off\"\r\n                                                                                  id={i}/></div>)}\r\n            <Button onClick={this.checkWords} text='Проверить' nameOfClass='next' />\r\n          </div>}\r\n\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining &&\r\n        //two buttons did better job, one button is next and the final button is submit\r\n        <>\r\n          <div>Воспроизведено слов правильно: {this.state.correct}</div>\r\n          <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>\r\n        </>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitMemoryWords(result))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MemoryWords)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../actions/authActions'\r\nimport './styles.css'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <div>\r\n            <ul className={props.className}>\r\n                <li><div onClick={props.signOut} className={props.className} >Выход</div></li>\r\n                <li><NavLink to='/profile' className={props.className}>Профиль: {props.profile.firstName}</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks) // null replaced mapstatetoprops","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './styles.css'\r\n\r\nconst SignedOutLinks = (props) => {\r\n    return (\r\n        <div>\r\n            <ul className=\"nav-right\">\r\n                <li><NavLink to='/signup' className={props.className}>Регистрация</NavLink></li>\r\n                <li><NavLink to='/signin' className={props.className}>Вход</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {makeStyles, AppBar, Toolbar, Typography} from \"@material-ui/core\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./styles.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    navBar: {\r\n        backgroundColor: '#d8f0de'\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: \"black\",\r\n    }\r\n}));\r\n\r\nconst Navbar = props => {\r\n    const classes = useStyles();\r\n    const {auth, profile} = props;\r\n    const links = auth.uid ? (\r\n        <SignedInLinks profile={profile} className={classes.link}/>\r\n    ) : (\r\n        <SignedOutLinks className={classes.link}/>\r\n    );\r\n    return (\r\n        <AppBar position=\"static\" className={classes.navBar}>\r\n            <Toolbar className=\"container inner-wrapper\">\r\n                <Typography variant=\"h6\">\r\n                    <Link to=\"/\" className={classes.link}>Главная</Link>\r\n                </Typography>\r\n\r\n                {links}\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, {Component} from 'react';\r\nimport {createProject} from \"../../actions/projectActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button} from \"../Button\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass CurrentSummary extends Component {\r\n  state = {\r\n    showSummary: false,\r\n  };\r\n  showResults = () => {\r\n    this.props.createProject(this.props.project);\r\n    this.setState({showSummary: true});\r\n  };\r\n  render() {\r\n    const {auth, project} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return <div>\r\n      <Button onClick={this.showResults} text='Посмотреть результаты'/>\r\n      {this.state.showSummary &&\r\n      <div>\r\n        Ваши результаты:\r\n\r\n      </div>\r\n      }\r\n    </div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentSummary)","import React, { Component } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Signin from './components/auth/SignIn';\r\nimport Signup from './components/auth/SignUp';\r\nimport Test from './components/Test';\r\nimport Summary from './components/Summary';\r\nimport Train from './components/Train';\r\nimport Sample from './components/Sample';\r\nimport Shulte from './components/Sample/Shulte';\r\nimport ShulteRed from './components/Sample/ShulteRed';\r\nimport Perception from './components/Sample/Perception';\r\nimport Count from './components/Sample/Count';\r\nimport MemoryWords from './components/Sample/MemoryWords';\r\nimport Navbar from './components/Navbar';\r\nimport CurrentSummary from './components/CurrentSummary';\r\nimport './styles.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path='/psy-testing' component={Home} />\r\n          <Route exact path='/signin' component={Signin} />\r\n          <Route exact path='/signup' component={Signup} />\r\n          <Route exact path='/test' component={Test} />\r\n          <Route exact path='/train' component={Train} />\r\n          <Route exact path='/profile' component={Summary} />\r\n          <Route exact path='/summary' component={Summary} />\r\n          <Route exact path='/test/sample' component={Sample} />\r\n          <Route exact path='/test/shulte' component={Shulte} />\r\n          <Route exact path='/test/shulte-red' component={ShulteRed} />\r\n          <Route exact path='/test/perception' component={Perception} />\r\n          <Route exact path='/test/count' component={Count} />\r\n          <Route exact path='/test/memory-words' component={MemoryWords} />\r\n          <Route exact path='/test/current-summary' component={CurrentSummary} />\r\n          <Redirect to='/psy-testing' />\r\n        </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\nimport fbConfig from './config/fbConfig';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n        reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}), // redux binding for firebase\r\n        reduxFirestore(fbConfig) // redux bindings for firestore\r\n    )\r\n);\r\n\r\nconst rehydrate = () => persistStore(store);\r\n\r\nstore.firebaseAuthIsReady.then(() => { rehydrate(\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <App />\r\n            </BrowserRouter>\r\n        </Provider>,\r\n        document.getElementById('root')))\r\n});\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}