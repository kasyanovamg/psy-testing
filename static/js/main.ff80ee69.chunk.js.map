{"version":3,"sources":["config/fbConfig.js","reducers/authReducer.js","reducers/projectReducer.js","reducers/testReducers.js","actions/testHelpers.js","actions/generalHelpers.js","reducers/generalReducers.js","reducers/rootReducer.js","components/Home/index.js","components/auth/SignIn/index.js","actions/authActions.js","components/auth/SignUp/index.js","components/Test/index.js","components/SummaryBlock/index.js","components/Summary/index.js","actions/projectActions.js","components/Sample/index.js","components/Train/index.js","components/Sample/Shulte/Information/index.js","components/Sample/Timer/index.js","components/Button/index.js","components/Sample/Shulte/index.js","components/Sample/ShulteRed/index.js","components/Sample/Perception/index.js","components/Sample/Count/Numbers/index.js","components/Sample/TimerReverse/index.js","components/Sample/Count/Rows/index.js","components/Sample/Count/index.js","components/Sample/MemoryWords/index.js","components/Navbar/SignedInLinks.js","components/Navbar/SignedOutLinks.js","components/Navbar/index.js","components/CurrentSummary/index.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","initState","authError","authReducer","state","arguments","length","undefined","action","type","console","log","Object","objectSpread","err","message","projectReducer","combineReducers","setTime","payload","currentTime","submitResult","result","persistCombineReducers","key","storage","storageSession","perceptionResult","time","errors","shulteResult","shulteRedResult","countResult","memoryWordsResult","memoryImagesResult","generalResult","defineProperty","name","finalScore","rootReducer","auth","project","firestoreReducer","firebaseReducer","current","testReducers","generalReducers","Home","props","react_default","a","createElement","className","Link","to","useStyles","makeStyles","theme","container","width","padding","margin","boxShadow","form","flexDirection","display","formItem","marginBottom","connect","dispatch","signIn","creds","credentials","getState","_ref","getFirebase","signInWithEmailAndPassword","email","password","then","catch","_useState","useState","_useState2","slicedToArray","formValues","setFormValues","handleChange","e","target","id","value","classes","uid","Redirect","Card","onSubmit","preventDefault","Typography","variant","TextField","placeholder","label","required","onChange","Grid","Button_Button","color","style","marginRight","backgroundColor","radio","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","firstName","lastName","initials","group","RadioGroup","isExperimentalGroup","defaultValue","FormControlLabel","control","Radio","compose","SummaryBlock","_ref$count","count","_ref$memoryWords","memoryWords","_ref$perception","perception","_ref$shulte","shulte","_ref$shulteRed","shulteRed","getProjects","get","projects","firestoreConnect","filteredProjects","filter","authorId","map","createdAt","toDate","toString","SummaryBlock_SummaryBlock","createProject","profile","add","authorFirstName","authorLastName","Date","CreateProject","title","content","_this","setState","handleSubmit","history","push","this","htmlFor","Component","Sample","Information","prevProps","_this$props","end","error","errorMessage","instructionNote","Timer","timer","counter","tick","setInterval","clearInterval","actions","Button","_Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","nameOfClass","inherits","createClass","text","onClick","Shulte","errorCounter","startTraining","endTraining","tableLength","numbers","fill","i","sort","Math","random","userNumbers","cellVerify","cell","slice","getFinalScore","setNext","submitFinal","_this2","Fragment","Shulte_Information","Sample_Timer","components_Button_Button","submitShulte","ShulteRed","countBackwards","redLength","blackLength","red","black","userRed","userBlack","parseInt","submitShulteRed","Perception","letter","searchedLetter","gridLength","letters","newLetters","longLetters","guessedCells","index","includes","abortTest","innerText","getTime","submitPerseption","Numbers","firstNumber","floor","secondNumber","sign","round","checkResult","first","second","abs","setAnswer","elIndex","res","disabled","onBlur","TimerReverse","maxTime","passedFunction","Rows","row","rowAnswer","ans","submitRow","startNextRow","submitLastRow","_this$props2","currentRow","rowLength","lineLength","number","j","Numbers_Numbers","Sample_TimerReverse","numberOfRows","Count","answer","arrayAnswer","toConsumableArray","firstArray","flat","secondArray","firstResult","reduce","b","secondResult","finalResult","item","Rows_Rows","submitCount","words","MemoryWords","showWords","correct","endMemorizing","checkWords","wordsLower","word","toLowerCase","values","join","autoComplete","submitMemoryWords","signOut","_ref2","NavLink","SignedOutLinks","navBar","link","textDecoration","links","Navbar_SignedInLinks","Navbar_SignedOutLinks","AppBar","position","Toolbar","CurrentSummary","showSummary","showResults","_get","App","components_Navbar","Switch","Route","exact","path","component","Signin","Signup","Test","Train","Summary","Boolean","window","location","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","BrowserRouter","src_App","document","getElementById","persistStore","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff80ee69.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth'\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyCZnBjFCvxM90C-WIcjuVwzUPAgr2782QA\",\r\n    authDomain: \"psy-testing.firebaseapp.com\",\r\n    databaseURL: \"https://psy-testing.firebaseio.com\",\r\n    projectId: \"psy-testing\",\r\n    storageBucket: \"psy-testing.appspot.com\",\r\n    messagingSenderId: \"209166839391\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nfirebase.firestore();\r\n\r\nexport default firebase ","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default authReducer;","export const initState = {}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  console.log(\"State in project reducer\", action, state)\r\n\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT_SUCCESS':\r\n      console.log('create project success');\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error');\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;","import { combineReducers } from \"redux\";\r\nimport { SET_TIME } from '../actions/testHelpers';\r\n\r\nexport const setTime = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case SET_TIME:\r\n            return action.payload.currentTime;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default combineReducers({\r\n    setTime\r\n})\r\n","export const SET_TIME = \"current/SET_TIME\";\r\n\r\nexport const setTime = (currentTime = \"\") => ({\r\n    type: SET_TIME,\r\n    payload: { currentTime }\r\n});","export const SUBMIT_PERCEPTION = \"general/SUBMIT_PERCEPTION\";\r\nexport const SUBMIT_SHULTE = \"general/SUBMIT_SHULTE\";\r\nexport const SUBMIT_SHULTE_RED = \"general/SUBMIT_SHULTE_RED\";\r\nexport const SUBMIT_COUNT = \"general/SUBMIT_COUNT\";\r\nexport const SUBMIT_MEMORY_WORDS = \"general/SUBMIT_MEMORY_WORDS\";\r\nexport const SUBMIT_MEMORY_IMAGES = \"general/SUBMIT_MEMORY_IMAGES\";\r\nexport const SUBMIT_RESULT = \"general/SUBMIT_RESULT\";\r\n\r\nexport const submitPerseption = (result = {}) => ({\r\n  type: SUBMIT_PERCEPTION,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitShulte = (result = {}) => ({\r\n  type: SUBMIT_SHULTE,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitShulteRed = (result = {}) => ({\r\n  type: SUBMIT_SHULTE_RED,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitCount = (result = {}) => ({\r\n  type: SUBMIT_COUNT,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitMemoryWords = (result = {}) => ({\r\n  type: SUBMIT_MEMORY_WORDS,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitMemoryImages = (result = {}) => ({\r\n  type: SUBMIT_MEMORY_IMAGES,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitResult = (result = {}) => ({\r\n  type: SUBMIT_RESULT,\r\n  payload: {result}\r\n})","import {persistCombineReducers} from 'redux-persist';\r\nimport storageSession from 'redux-persist/lib/storage/session';\r\nimport {\r\n  SUBMIT_COUNT, SUBMIT_MEMORY_IMAGES,\r\n  SUBMIT_MEMORY_WORDS,\r\n  SUBMIT_PERCEPTION,\r\n  SUBMIT_SHULTE,\r\n  SUBMIT_SHULTE_RED,\r\n  SUBMIT_RESULT\r\n} from '../actions/generalHelpers';\r\n\r\nexport const perceptionResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_PERCEPTION:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const shulteResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_SHULTE:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const shulteRedResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_SHULTE_RED:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const countResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_COUNT:\r\n      return {\r\n        ...state,\r\n        result: action.payload.result,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const memoryWordsResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_MEMORY_WORDS:\r\n      return {\r\n        ...state,\r\n        result: action.payload.result,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const memoryImagesResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_MEMORY_IMAGES:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const generalResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_RESULT:\r\n      return {\r\n        ...state,\r\n        [action.payload.result.name]: action.payload.result.finalScore,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default persistCombineReducers(\r\n  {\r\n    key: 'psyTesting',\r\n    storage: storageSession,\r\n  },\r\n  {\r\n    perceptionResult,\r\n    shulteResult,\r\n    shulteRedResult,\r\n    countResult,\r\n    memoryWordsResult,\r\n    memoryImagesResult,\r\n    generalResult,\r\n  })\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport testReducers from './testReducers';\r\nimport generalReducers from './generalReducers';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n    current: testReducers,\r\n    result: generalReducers\r\n});\r\n\r\nexport default rootReducer","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './styles.css'\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <div className=\"container home-container\">\r\n            {/*<div className=\"home-item\"><Link to=\"/test\" >Начать тренировку</Link></div>*/}\r\n            {/*<div className=\"home-item\"><Link to=\"/train\" >Train</Link></div>*/}\r\n            <div className=\"home-item\"><Link to='/test/shulte'>Начать</Link></div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Home","import React, { useState } from \"react\";\r\nimport { TextField, makeStyles, Button, Card, Grid, Typography } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signIn } from \"../../../actions/authActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    width: 600,\r\n    padding: 15,\r\n    margin: \"300px auto\",\r\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\"\r\n  },\r\n  form: {\r\n    flexDirection: \"column\",\r\n    display: \"flex\"\r\n  },\r\n  formItem: {\r\n    marginBottom: 15\r\n  }\r\n}));\r\n\r\nconst SignIn = (props) => {\r\n  const [formValues, setFormValues] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.signIn(formValues);\r\n  };\r\n  const classes = useStyles();\r\n  const { authError, auth } = props;\r\n  if (auth.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Card className={classes.container}>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h5\" className=\"grey-text text-darken-3\">Войти</Typography>\r\n        <TextField\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Введите email\"\r\n          label=\"Email адрес\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.email}\r\n          className={classes.formItem}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Введите пароль\"\r\n          label=\"Пароль\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.password}\r\n          className={classes.formItem}\r\n        />\r\n        <Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ marginRight: 20,  backgroundColor: '#d8f0de', color: 'black' }}\r\n          >\r\n            Войти\r\n          </Button>\r\n          {authError && <p>{authError}</p>}\r\n        </Grid>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({type: 'LOGIN_SUCCESS'});\r\n    }).catch((err) => {\r\n      dispatch({type: 'LOGIN_ERROR', err});\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({type: 'SIGNOUT_SUCCESS'})\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then(resp => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0],\r\n        group: newUser.group,\r\n      });\r\n    }).then(() => {\r\n      dispatch({type: 'SIGNUP_SUCCESS'});\r\n    }).catch((err) => {\r\n      dispatch({type: 'SIGNUP_ERROR', err});\r\n    });\r\n  }\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  makeStyles,\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  Typography,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio\r\n} from \"@material-ui/core\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../../actions/authActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    width: 600,\r\n    padding: 15,\r\n    margin: \"200px auto\",\r\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\"\r\n  },\r\n  form: {\r\n    flexDirection: \"column\",\r\n    display: \"flex\"\r\n  },\r\n  formItem: {\r\n    marginBottom: 15\r\n  },\r\n  radio: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n  }\r\n}));\r\n\r\nconst Signup = props => {\r\n  const [formValues, setFormValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    group: \"experimental\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const setGroup = e => {\r\n    setFormValues({\r\n      ...formValues,\r\n      group: e.target.value\r\n    });\r\n    console.log(formValues)\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.signUp(formValues);\r\n  };\r\n  const classes = useStyles();\r\n  const { authError, auth } = props;\r\n  if (auth.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Card className={classes.container}>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h5\" className=\"grey-text text-darken-3\">\r\n          Зарегистрироваться\r\n        </Typography>\r\n        <TextField\r\n          id=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Введите email\"\r\n          label=\"Email адрес\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.email}\r\n          className={classes.formItem}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Введите пароль\"\r\n          label=\"Пароль\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.password}\r\n          className={classes.formItem}\r\n        />\r\n        <TextField\r\n          id=\"firstName\"\r\n          type=\"text\"\r\n          placeholder=\"Введите имя\"\r\n          label=\"Имя\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.firstName}\r\n          className={classes.formItem}\r\n        />\r\n        <TextField\r\n          id=\"lastName\"\r\n          type=\"text\"\r\n          placeholder=\"Введите фамилию\"\r\n          label=\"Фамилия\"\r\n          required\r\n          onChange={handleChange}\r\n          value={formValues.lastName}\r\n          className={classes.formItem}\r\n        />\r\n        <Typography variant=\"h6\">Группа</Typography>\r\n        <RadioGroup\r\n          name=\"group\"\r\n          value={formValues.isExperimentalGroup}\r\n          onChange={setGroup}\r\n          className={classes.radio}\r\n          defaultValue={formValues.group}\r\n        >\r\n          <FormControlLabel\r\n            id=\"isExperimentalGroup\"\r\n            value=\"experimental\"\r\n            control={<Radio />}\r\n            label=\"Экспериментальная\"\r\n          />\r\n          <FormControlLabel\r\n            id=\"isExperimentalGroup\"\r\n            value=\"control\"\r\n            control={<Radio />}\r\n            label=\"Контрольная\"\r\n          />\r\n        </RadioGroup>\r\n        <Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ marginRight: 20,  backgroundColor: '#d8f0de', color: 'black' }}\r\n          >\r\n            Зарегистрироваться\r\n          </Button>\r\n          {authError && <p>{authError}</p>}\r\n        </Grid>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: creds => dispatch(signUp(creds))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Signup);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\n//import { firestoreConnect } from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport './styles.css'\r\n\r\nconst Test = (props) => {\r\n  const {auth} = props;\r\n  if (!auth.uid) return <Redirect to='/signin'/>;\r\n  return (\r\n    <div className=\"container\">\r\n      {/* <Link to='/test/sample'>Sample</Link>  */}\r\n      <div className=\"test-home\">\r\n        <Link to='/test/shulte'>Начать тест Шульте</Link>\r\n        <br/>\r\n        <Link to='/test/shulte-red'>Начать тест Шульте в модификации Горбова</Link>\r\n        <br/>\r\n        <Link to='/test/perception'>Начать методику корректурные пробы</Link>\r\n        <br/>\r\n        <Link to='/test/count'>Начать методику счет по Крепелину</Link>\r\n        <br/>\r\n        <Link to='/test/memory-words'>Начать методику \"Запоминание слов\"</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps)\r\n)(Test)","import React from 'react';\r\n\r\nexport const SummaryBlock = ({count = 0, memoryWords = 0 , perception = 0 , shulte = 0, shulteRed = 0}) => {\r\n  return (<div>\r\n    <div>\r\n      Таблицы шульте: {shulte}\r\n    </div>\r\n    <div>\r\n      Чернокрасные таблицы Шульте: {shulteRed}\r\n    </div>\r\n    <div>\r\n      Корректурная проба: {perception}\r\n    </div>\r\n    <div>\r\n      Счет: {count}\r\n    </div>\r\n    <div>\r\n      Запоминание слов: {memoryWords}\r\n    </div>\r\n  </div>);\r\n}\r\n\r\n","import React from 'react'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux';\r\nimport get from 'lodash-es/get'\r\nimport {SummaryBlock} from \"../SummaryBlock\";\r\n\r\nconst getProjects = (state) => get(state, 'firestore.ordered.projects', []);\r\n\r\n\r\nconst Summary = ({ projects, auth }) => {\r\n  const filteredProjects = projects.filter(project => project.authorId === auth.uid);\r\nconsole.log(filteredProjects)\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary summary-container\">\r\n      {filteredProjects.map(project =>\r\n        <div className=\"card-content grey-text text-darken-3\" key={project.id}>\r\n          <p className=\"grey-text\">Тест пройден: {project.createdAt && project.createdAt.toDate().toString()}</p>\r\n          {project.generalResult &&\r\n          <SummaryBlock\r\n            count={project.generalResult.count}\r\n            memoryWords={project.generalResult.memoryWords}\r\n            perception={project.generalResult.perception}\r\n            shulte={project.generalResult.shulte}\r\n            shulteRed={project.generalResult.shulteRed}\r\n          />\r\n          }\r\n      <hr />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: getProjects(state),\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' }\r\n  ])\r\n)(Summary)","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n    }).catch(err => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n//import { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Sample from '../Sample';\r\n\r\nconst Train = (props) => {\r\n  const { auth } = props;\r\n  if (!auth.uid) return <Redirect to='/signin' />\r\n  return (\r\n    <div>\r\n      Train\r\n      <Sample history={props.history} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps)\r\n)(Train)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Information extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    return prevProps.time !== this.props.time || prevProps.errors !== this.props.errors;\r\n  }\r\n  render() {\r\n    const {end, errors, error, errorMessage, instructionNote, time} = this.props;\r\n    return (\r\n      <div className='info'>\r\n        {\r\n          end ? <p>Тестирование завершено! Ваше время: {time} сек. Количество ошибок: {errors}.</p> :\r\n            error ? <p className='info__error'>{errorMessage}</p> :\r\n              <p>{instructionNote}</p>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    time: state.current.setTime\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Information)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {setTime} from '../../../actions/testHelpers';\r\n\r\nclass Timer extends Component {\r\n  state = {\r\n    timer: null,\r\n    counter: 0\r\n  };\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      counter: this.state.counter + 1\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let timer = setInterval(this.tick, 1000);\r\n    this.setState({ timer });\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.setTime(this.state.counter);\r\n    clearInterval(this.state.timer);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='timer'>\r\n        {this.state.counter} сек.\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setTime\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  actions\r\n)(Timer);","import React, {Component} from 'react';\r\nimport './styles.css'\r\n\r\nexport class Button extends Component {\r\n  nameOfClass = () => {\r\n    switch (this.props.nameOfClass) {\r\n      case 'next':\r\n        return 'button-next';\r\n      default:\r\n        return 'button-main';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {text, onClick} = this.props;\r\n    return (\r\n      <button className={this.nameOfClass()} onClick={onClick}>{text}</button>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../../actions/projectActions'\r\nimport {submitShulte, submitResult} from '../../../actions/generalHelpers'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Information from './Information'\r\nimport Timer from '../Timer'\r\nimport {Button} from \"../../Button\";\r\nimport './styles.css';\r\n\r\nclass Shulte extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n  };\r\n\r\n  tableLength = 25; //25\r\n  numbers = Array(this.tableLength).fill().map((e, i) => i + 1).sort(() => Math.random() - 0.5);\r\n  userNumbers = [0];\r\n  cellVerify = (cell) => {\r\n    this.setState({error: false});\r\n    if (this.userNumbers.slice(-1)[0] + 1 === cell) {\r\n      this.userNumbers.push(cell);\r\n      if (this.userNumbers.slice(-1)[0] === this.tableLength) {\r\n        this.setState({endTraining: true})\r\n      }\r\n    } else {\r\n      this.setState({error: true});\r\n      if (this.userNumbers.length <= this.tableLength && cell !== 25) {\r\n        let error = this.state.errorCounter + 1;\r\n        this.setState({errorCounter: error})\r\n      }\r\n    }\r\n  };\r\n\r\n  getFinalScore = () => {\r\n    return this.props.time * 0.1 + this.state.errorCounter;\r\n  };\r\n\r\n  setNext = () => {\r\n    const finalScore = this.getFinalScore();\r\n    this.props.submitResult({time: this.props.time, errors: this.state.errorCounter});\r\n    this.props.submitFinal ({finalScore, name: 'shulte'});\r\n    this.props.history.push('/test/shulte-red');\r\n  };\r\n\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка различных аспектов внимания</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Начните поиск цифр от 1 до 25'}</span>\r\n          <button className='start-btn' onClick={() =>\r\n            this.setState({startTraining: true})}>\r\n            Начать\r\n          </button>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n          <Information\r\n            error={this.state.error}\r\n            end={this.state.endTraining}\r\n            errors={this.state.errorCounter}\r\n            errorMessage={'Неверное число!'}\r\n            instructionNote={'Найдите числа!'}\r\n          />\r\n\r\n          <div className='table'>\r\n            {\r\n              this.numbers.map((e) =>\r\n                <div key={e} onClick={() => this.cellVerify(e)} className='cell'>{e}</div>)\r\n            }\r\n          </div>\r\n          {!this.state.endTraining && <Timer/>}\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining &&\r\n         // <button className='next' onClick={() =>\r\n        //  this.props.submitResult({time: this.props.time, errors: this.state.errorCounter})}>Submit\r\n        //  </button>\r\n         // <button className='next' onClick={() =>\r\n        //  this.props.createProject(this.props.project)\r\n      // }>Submit Final\r\n      //    </button>\r\n\r\n        <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitShulte(result)),\r\n    submitFinal: (result) => dispatch(submitResult(result)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shulte)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../../actions/projectActions'\r\nimport {submitResult, submitShulteRed} from '../../../actions/generalHelpers'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Information from '../Shulte/Information'\r\nimport Timer from '../Timer'\r\nimport './styles.css';\r\nimport {Button} from \"../../Button\";\r\n\r\nclass ShulteRed extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n    countBackwards: false,\r\n  };\r\n\r\n  redLength = 24; //24\r\n  blackLength = 25; //25\r\n  red = Array(this.redLength).fill().map((e, i) => i + 1 + 'r');\r\n  black = Array(this.blackLength).fill().map((e, i) => i + 1 + 'b');\r\n  numbers = this.red.concat(this.black).sort(() => Math.random() - 0.5);\r\n  userRed = [`${this.redLength + 1}r`];\r\n  userBlack = ['0b'];\r\n  cellVerify = (cell) => {\r\n    this.setState({error: false});\r\n    if (this.state.countBackwards) {\r\n      if (parseInt(this.userRed.slice(-1)[0]) - 1 + \"r\" === cell) {\r\n        this.userRed.push(cell);\r\n        this.setState({countBackwards: false});\r\n      } else {\r\n        this.setState({error: true});\r\n        if (this.userRed.length <= this.redLength && cell !== 24) {\r\n          let error = this.state.errorCounter + 1;\r\n          this.setState({errorCounter: error})\r\n        }\r\n      }\r\n    } else if (!this.state.countBackwards) {\r\n      if (parseInt(this.userBlack.slice(-1)[0]) + 1 + \"b\" === cell) {\r\n        this.userBlack.push(cell);\r\n        this.setState({countBackwards: true});\r\n        if (parseInt(this.userBlack.slice(-1)[0]) === this.blackLength) {\r\n          this.setState({endTraining: true})\r\n        }\r\n      } else {\r\n        this.setState({error: true});\r\n        if (this.userBlack.length <= this.blackLength && cell !== 25) {\r\n          let error = this.state.errorCounter + 1;\r\n          this.setState({errorCounter: error})\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  getFinalScore = () => {\r\n    return this.props.time * 0.1 + this.state.errorCounter;\r\n  };\r\n\r\n  setNext = () => {\r\n    const finalScore = this.getFinalScore();\r\n    this.props.submitResult({time: this.props.time, errors: this.state.errorCounter});\r\n    this.props.submitFinal ({finalScore, name: 'shulteRed'});\r\n    this.props.history.push('/test/perception');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка различных аспектов внимания</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Начните поиск цифр: 1 черный - 24 красный; 2 черный - 23 красный... '}</span>\r\n          <button className='start-btn' onClick={() =>\r\n            this.setState({startTraining: true})}>\r\n            Начать\r\n          </button>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n          <Information\r\n            error={this.state.error}\r\n            end={this.state.endTraining}\r\n            errors={this.state.errorCounter}\r\n            errorMessage={'Неверное число!'}\r\n            instructionNote={'Найдите числа: 1 черный - 24 красный; 2 черный - 23 красный...'}\r\n          />\r\n\r\n          <div className='table-wide'>\r\n            {\r\n              this.numbers.map((e) =>\r\n                <div className={e.slice(-1) === 'r' ? 'red cell-wide' : 'cell-wide'}\r\n                     key={e} onClick={() => this.cellVerify(e)}>{parseInt(e)}</div>)\r\n            }\r\n          </div>\r\n          {!this.state.endTraining && <Timer/>}\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining &&\r\n        <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitShulteRed(result)),\r\n    submitFinal: (result) => dispatch(submitResult(result)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShulteRed)","import React, {Component} from 'react';\r\nimport Timer from '../Timer';\r\nimport Information from '../Shulte/Information';\r\nimport {createProject} from \"../../../actions/projectActions\";\r\nimport {submitPerseption, submitResult} from \"../../../actions/generalHelpers\";\r\nimport {connect} from \"react-redux\";\r\nimport './styles.css';\r\nimport {Button} from \"../../Button\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Perception extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false\r\n  };\r\n  letter = 'н';\r\n  searchedLetter = 'п';\r\n  gridLength = 252;  //252\r\n  letters = Array(this.gridLength).fill(this.letter);\r\n  newLetters = Array(4).fill(this.searchedLetter);\r\n  longLetters = this.letters.concat(this.newLetters).sort(() => Math.random() - 0.5);\r\n\r\n  guessedCells = [];\r\n  cellVerify = (cell, index) => {\r\n    this.setState({error: false});\r\n    if (cell === this.searchedLetter && !this.guessedCells.includes(index) && this.guessedCells.length <= this.newLetters.length) {\r\n      this.guessedCells.push(index);\r\n      if (this.newLetters.length === this.guessedCells.length) {\r\n        this.setState({endTraining: true});\r\n      }\r\n    } else {\r\n      this.setState({error: true, errorCounter: this.state.errorCounter + 1});\r\n    }\r\n\r\n  };\r\n  abortTest = () => {\r\n    this.setState({errorCounter: this.state.errorCounter + (this.newLetters.length - this.guessedCells.length)});\r\n    this.setState({endTraining: true});\r\n  };\r\n\r\n  getFinalScore = () => {\r\n    return this.props.time * 0.1 + this.state.errorCounter;\r\n  };\r\n\r\n  setNext = () => {\r\n    const finalScore = this.getFinalScore();\r\n    this.props.submitResult({time: this.props.time, errors: this.state.errorCounter});\r\n    this.props.submitFinal ({finalScore, name: 'perception'});\r\n    this.props.history.push('/test/count');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n        <div className='contents'>\r\n          <p>Корректурная проба</p>\r\n          {!this.state.startTraining &&\r\n          <div className='message'>\r\n            <span className='start-message'>{`Найдите все буквы \"${this.searchedLetter}\"`}</span>\r\n            <button className='start-btn' onClick={() => this.setState({startTraining: true})}>Начать</button>\r\n          </div>\r\n          }\r\n          {this.state.startTraining &&\r\n          <React.Fragment>\r\n            <Information error={this.state.error} end={this.state.endTraining}\r\n                         errors={this.state.errorCounter}\r\n                         errorMessage={'Неверная буква!'}\r\n                         instructionNote={`Найдите все буквы \"${this.searchedLetter}\"`}\r\n            />\r\n            <div className='grid'>\r\n              {\r\n                this.longLetters.map((e, i) =>\r\n                  <div\r\n                    key={i}\r\n                    onClick={(e) => this.cellVerify(e.target.innerText, i)}\r\n                    className='letter'>{e}\r\n                  </div>)\r\n              }\r\n            </div>\r\n            {!this.state.endTraining && <> <Timer getTime={this.props.time}/> <Button text='Завершить тестирование' onClick={this.abortTest} /> </>}\r\n\r\n          </React.Fragment>\r\n          }\r\n          {this.state.endTraining && <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitPerseption(result)),\r\n    submitFinal: (result) => dispatch(submitResult(result)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Perception)","import React, {Component} from \"react\";\r\n\r\nexport class Numbers extends Component {\r\n  state = {\r\n    value: null,\r\n  };\r\n  firstNumber = Math.floor(Math.random() * (10 - 1)) + 1;\r\n  secondNumber = Math.floor(Math.random() * (10 - 1)) + 1;\r\n  sign = Math.round(Math.random());\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value\r\n    })\r\n  };\r\n\r\n  checkResult = () => {\r\n    const first = parseInt(this.firstNumber);\r\n    const second = parseInt(this.secondNumber);\r\n    const result = this.sign  ? first + second : Math.abs(first - second);\r\n    //return parseInt(this.state.value) === result ? console.log(\"yes\") : console.log(\"No\")\r\n    this.props.setAnswer({\r\n      index: this.props.elIndex,\r\n      res: Math.abs(parseInt(this.state.value)) === result ? 1 : 0})\r\n  };\r\n\r\n  render() {\r\n    const {firstNumber, secondNumber, sign} = this;\r\n    const {disabled} = this.props;\r\n\r\n    return (\r\n      <div className='cell-container'>\r\n        <div>{firstNumber}</div>\r\n        <div> {sign ? \"+\" : \"-\"} </div>\r\n        <div>{secondNumber}</div>\r\n        <input onChange={this.handleChange} disabled={disabled} onBlur={this.checkResult}\r\n        style={{width: '36px'}}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n//import {setTime} from '../../../actions/testHelpers';\r\n\r\nclass TimerReverse extends Component {\r\n  state = {\r\n    timer: null,\r\n    counter: this.props.maxTime\r\n  };\r\n\r\n  tick = () => {\r\n    if (this.state.counter > 1) {\r\n      this.setState({\r\n        counter: this.state.counter - 1\r\n      })\r\n    } else  {\r\n      this.setState({\r\n        counter: this.state.counter - 1\r\n      });\r\n      this.props.passedFunction();\r\n      clearInterval(this.state.timer);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let timer = setInterval(this.tick, 1000);\r\n    this.setState({ timer });\r\n  }\r\n  componentWillUnmount() {\r\n    //this.props.setTime(this.state.counter); - не нужно в рамках обратного отчета\r\n    clearInterval(this.state.timer);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='timer'>\r\n        {this.state.counter} сек.\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  //setTime\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(TimerReverse);","import React, {Component} from 'react';\r\nimport {Numbers} from \"../Numbers\";\r\nimport TimerReverse from \"../../TimerReverse\";\r\nimport {lineLength} from '../../Count'\r\nimport {Button} from \"../../../Button\";\r\n\r\nexport class Rows extends Component {\r\n  state = {\r\n    [this.props.row]: [],\r\n  };\r\n\r\n  rowAnswer = (ans) => {\r\n    this.setState(state => ({...state, [this.props.row]: state[this.props.row].concat(ans)}))\r\n  };\r\n\r\n  submitRow = () => {\r\n    const {startNextRow, row} = this.props;\r\n    this.props.setAnswer(this.state[this.props.row]);\r\n    startNextRow(row + 1);\r\n  };\r\n\r\n  submitLastRow = () => {\r\n    this.submitRow();\r\n    this.props.endTraining();\r\n\r\n  };\r\n\r\n  render() {\r\n    const {row, currentRow, time, rowLength } = this.props;\r\n    return (\r\n      <div className='number-container'>\r\n        {\r\n          Array(lineLength).fill().map((number, j) => (\r\n            <Numbers\r\n              row={row}\r\n              key={j}\r\n              elIndex={j}\r\n              disabled={row !== currentRow}\r\n              lineLength={lineLength}\r\n              setAnswer={this.rowAnswer}\r\n            />\r\n          ))\r\n        }\r\n        {rowLength === row ? <Button onClick={this.submitLastRow} text='Готово' nameOfClass='next'/> :\r\n          <Button  nameOfClass='next' onClick={this.submitRow} text='Следующая строка' />}\r\n        <div className='timer-container'>\r\n          {row === currentRow &&\r\n          <TimerReverse maxTime={time} passedFunction={rowLength === row ? this.submitLastRow : this.submitRow}/>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../../actions/projectActions';\r\nimport {submitCount, submitResult} from '../../../actions/generalHelpers';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Information from '../Shulte/Information';\r\nimport {Rows} from './Rows';\r\nimport {Button} from \"../../Button\";\r\nimport './styles.css';\r\n\r\nexport const lineLength = 23; //23;\r\nconst numberOfRows = 10; //10 - always even number\r\n\r\nclass Count extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n    result: {},\r\n    currentRow: 0,\r\n    answer: {},\r\n    arrayAnswer: [],\r\n    finalScore: 0,\r\n  };\r\n\r\n  setAnswer = (ans) => {\r\n    this.setState(({answer: {...this.state.answer, [this.state.currentRow]: ans}}))\r\n    this.setState(({arrayAnswer: [...this.state.arrayAnswer, ans]}))\r\n  };\r\n\r\n  rowLength = Array(numberOfRows).fill('');\r\n\r\n  startNextRow = (i) => {\r\n    this.setState({currentRow: i});\r\n  };\r\n\r\n  endTraining = () => {\r\n    this.setState({endTraining: true});\r\n  };\r\n\r\n\r\n  setNext = () => {\r\n    const firstArray = this.state.arrayAnswer.slice(0, numberOfRows/2).flat();\r\n    const secondArray = this.state.arrayAnswer.slice(numberOfRows/2, numberOfRows).flat();\r\n    console.log(firstArray, secondArray);\r\n    const firstResult = firstArray.reduce((a, b = {}) => { console.log(a, b);   return a + b.res}, 0);\r\n    const secondResult = secondArray.reduce((a, b = {}) => a + b.res, 0);\r\n    // Если значение коэффициента работоспособности приближается к 1,\r\n    // то это означает, что утомления практически не происходит.\r\n    // Если коэффициент больше 1, то это свидетельствует о медленной врабатываемости испытуемого.\r\n    // Коэффициент работоспособности, стремящийся к нулю, связан с истощаемостью внимания и снижением работоспособности.\r\n    const finalResult = firstResult > 0 ? secondResult/firstResult : 0;\r\n    this.props.submitResult(this.state.answer);\r\n    this.props.submitFinal ({finalScore: finalResult, name: 'count'});\r\n    this.props.history.push('/test/memory-words');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка различных аспектов внимания</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Складывайте или вычитайте числа. Запишите модуль числа.'}</span>\r\n          <Button text='Начать' onClick={() =>\r\n            this.setState({startTraining: true})}/>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n          <Information\r\n            error={this.state.error}\r\n            end={this.state.endTraining}\r\n            errors={this.state.errorCounter}\r\n            errorMessage={'Неверное число!'}\r\n            instructionNote={'Складывайте или вычитайче числа. Запишите модуль числа.'}\r\n          />\r\n\r\n          {\r\n            this.rowLength.map((item, i) =>\r\n              <Rows\r\n                rowLength={this.rowLength.length - 1}\r\n                key={i}\r\n                row={i}\r\n                currentRow={this.state.currentRow}\r\n                time={30}\r\n                setAnswer={this.setAnswer}\r\n                startNextRow={this.startNextRow}\r\n                endTraining={this.endTraining}\r\n              />\r\n            )\r\n          }\r\n\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining && <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitCount(result)),\r\n    submitFinal: (result) => dispatch(submitResult(result)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Count)\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../../actions/projectActions'\r\nimport {submitMemoryWords, submitResult} from '../../../actions/generalHelpers'\r\nimport {Redirect} from 'react-router-dom'\r\nimport './styles.css';\r\nimport TimerReverse from \"../TimerReverse\";\r\nimport {Button} from \"../../Button\";\r\n\r\n//(new Set(array)).size !== array.length;  to check for duplicates\r\nconst wordsRaw = ['Лес', 'Хлеб', 'Окно', 'Стул', 'Вода', 'Конь', 'Гриб', 'Игла', 'Мед', 'Огонь',\r\n  'Число', 'Хор', 'Камень', 'Кино', 'Зонт', 'Море', 'Шмель', 'Лампа', 'Рысь',\r\n  'Кот', 'Ель', 'Дом', 'Зима', 'Мост', 'Брат', 'Очки'];\r\n\r\nconst words = wordsRaw.sort(() => Math.random() - 0.5).slice(0, 10);\r\n\r\nclass MemoryWords extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n    showWords: true,\r\n    result: [],\r\n    correct: 0,\r\n  };\r\n\r\n  endMemorizing = () => {\r\n    this.setState({showWords: false})\r\n  };\r\n  checkWords = () => {\r\n    const wordsLower = words.map(word => word.toLowerCase());\r\n    const correct = Object.values(this.state.result).filter(value => wordsLower.includes(value.toLowerCase()));\r\n    this.setState({endTraining: true, correct: correct.length})\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState(({result: {...this.state.result, [e.target.id]: e.target.value}}))\r\n  };\r\n\r\n  setNext = () => {\r\n    this.props.submitResult(this.state.correct);\r\n    this.props.submitFinal({finalScore: this.state.correct, name: 'memoryWords'});\r\n    this.props.history.push('/test/current-summary');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка памяти</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Запомните следующие слова'}</span>\r\n          <button className='start-btn' onClick={() =>\r\n            this.setState({startTraining: true})}>\r\n            Начать\r\n          </button>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n\r\n          {this.state.showWords && <TimerReverse maxTime={30} passedFunction={this.endMemorizing}/>}\r\n\r\n          {this.state.showWords && <div className='words'>{words.join(', ')}</div>}\r\n          {!this.state.showWords && <div>\r\n            {words.map((word, i) => <div key={i} className='input-wrapper'><input placeholder={'Введите слово'}\r\n                                                                                  onChange={this.handleChange}\r\n                                                                                  autoComplete=\"off\"\r\n                                                                                  id={i}/></div>)}\r\n            <Button onClick={this.checkWords} text='Проверить' nameOfClass='next'/>\r\n          </div>}\r\n\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining &&\r\n        //two buttons did better job, one button is next and the final button is submit\r\n        <>\r\n          <div>Воспроизведено слов правильно: {this.state.correct}</div>\r\n          <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>\r\n        </>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitMemoryWords(result)),\r\n    submitFinal: (result) => dispatch(submitResult(result)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MemoryWords)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../actions/authActions'\r\nimport './styles.css'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <div>\r\n            <ul className={props.className}>\r\n                <li><div onClick={props.signOut} className={props.className} >Выход</div></li>\r\n                <li><NavLink to='/profile' className={props.className}>Профиль: {props.profile.firstName}</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks) // null replaced mapstatetoprops","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './styles.css'\r\n\r\nconst SignedOutLinks = (props) => {\r\n    return (\r\n        <div>\r\n            <ul className=\"nav-right\">\r\n                <li><NavLink to='/signup' className={props.className}>Регистрация</NavLink></li>\r\n                <li><NavLink to='/signin' className={props.className}>Вход</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {makeStyles, AppBar, Toolbar, Typography} from \"@material-ui/core\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./styles.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    navBar: {\r\n        backgroundColor: '#d8f0de',\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: \"black\",\r\n    }\r\n}));\r\n\r\nconst Navbar = props => {\r\n    const classes = useStyles();\r\n    const {auth, profile} = props;\r\n    const links = auth.uid ? (\r\n        <SignedInLinks profile={profile} className={classes.link}/>\r\n    ) : (\r\n        <SignedOutLinks className={classes.link}/>\r\n    );\r\n    return (\r\n        <AppBar position=\"static\" className={classes.navBar}>\r\n            <Toolbar className=\"container inner-wrapper\">\r\n                <Typography variant=\"h6\">\r\n                    <Link to=\"/\" className={classes.link}>Главная</Link>\r\n                </Typography>\r\n\r\n                {links}\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport get from 'lodash-es/get';\r\nimport {createProject} from \"../../actions/projectActions\";\r\nimport {Button} from \"../Button\";\r\nimport {SummaryBlock} from '../SummaryBlock';\r\nimport './styles.css';\r\n\r\nclass CurrentSummary extends Component {\r\n  state = {\r\n    showSummary: false,\r\n  };\r\n  showResults = () => {\r\n    this.props.createProject(this.props.project);\r\n    this.setState({showSummary: true});\r\n  };\r\n\r\n  render() {\r\n    const {auth, project} = this.props;\r\n    const {count, memoryWords, perception, shulte, shulteRed} = get(project, 'generalResult', {});\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return <div className='summary-container'>\r\n      <div className='summary-button'>\r\n        <Button onClick={this.showResults} text='Посмотреть результаты'/>\r\n      </div>\r\n      {this.state.showSummary &&\r\n      <div>\r\n        Ваши результаты:\r\n        <SummaryBlock\r\n        count={count}\r\n        memoryWords={memoryWords}\r\n        perception={perception}\r\n        shulte={shulte}\r\n        shulteRed={shulteRed}\r\n      />\r\n      </div>\r\n      }\r\n    </div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentSummary)","import React, { Component } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Signin from './components/auth/SignIn';\r\nimport Signup from './components/auth/SignUp';\r\nimport Test from './components/Test';\r\nimport Summary from './components/Summary';\r\nimport Train from './components/Train';\r\nimport Sample from './components/Sample';\r\nimport Shulte from './components/Sample/Shulte';\r\nimport ShulteRed from './components/Sample/ShulteRed';\r\nimport Perception from './components/Sample/Perception';\r\nimport Count from './components/Sample/Count';\r\nimport MemoryWords from './components/Sample/MemoryWords';\r\nimport Navbar from './components/Navbar';\r\nimport CurrentSummary from './components/CurrentSummary';\r\nimport './styles.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path='/psy-testing' component={Home} />\r\n          <Route exact path='/signin' component={Signin} />\r\n          <Route exact path='/signup' component={Signup} />\r\n          <Route exact path='/test' component={Test} />\r\n          <Route exact path='/train' component={Train} />\r\n          <Route exact path='/profile' component={Summary} />\r\n          <Route exact path='/summary' component={Summary} />\r\n          <Route exact path='/test/sample' component={Sample} />\r\n          <Route exact path='/test/shulte' component={Shulte} />\r\n          <Route exact path='/test/shulte-red' component={ShulteRed} />\r\n          <Route exact path='/test/perception' component={Perception} />\r\n          <Route exact path='/test/count' component={Count} />\r\n          <Route exact path='/test/memory-words' component={MemoryWords} />\r\n          <Route exact path='/test/current-summary' component={CurrentSummary} />\r\n          <Redirect to='/psy-testing' />\r\n        </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from 'redux-thunk';\r\nimport {reduxFirestore, getFirestore} from 'redux-firestore';\r\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase';\r\nimport fbConfig from './config/fbConfig';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {persistStore} from 'redux-persist';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\r\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}), // redux binding for firebase\r\n    reduxFirestore(fbConfig) // redux bindings for firestore\r\n  )\r\n);\r\n\r\nconst rehydrate = () => persistStore(store);\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n  rehydrate(\r\n    ReactDOM.render(\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <App/>\r\n        </BrowserRouter>\r\n      </Provider>,\r\n      document.getElementById('root')))\r\n});\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}